{"version":3,"sources":["components/Cards/Cards.module.css","components/Section/Section.module.css","utils/api.ts","utils/keeper.ts","utils/tmpSimpleKeeper.ts","components/Card/Attributes.tsx","utils/getImage.ts","components/Card/Card.tsx","components/Card/CardAdd.tsx","components/Cards/Cards.tsx","components/Section/Section.tsx","components/Create/CreateAuction.tsx","components/Create/CreateLot.tsx","components/DetailsTable/DetailsTable.tsx","components/Details/Details.tsx","components/Header/Header.tsx","components/Page/Page.tsx","components/App/App.tsx","index.tsx","components/Card/Card.module.css"],"names":["module","exports","WAVES","fetchWrapper","url","fetch","then","response","json","CONTRACT_ADDRESS","BASE_URL","getUrl","getDataUrl","matches","getAuctionIds","a","organizer","res","auctionIds","i","length","push","value","trim","split","getAuctionDetails","auctionId","auctionDetails","id","key","substr","indexOf","val","promises","map","Promise","all","auctions","createLot","lot","sign","tx","type","data","name","description","imageUrl","quantity","precision","reissuable","fee","tokens","assetId","JSON","parse","startAuction","auction","startPrice","deposit","Error","dappAddress","call","function","args","duration","priceAssetId","payment","resolve","reject","_getKeeperObs","subscribe","console","info","err","keeper","storageItem","localStorage","getItem","publicState","setItem","stringify","timer","pipe","retryWhen","errs","delay","take","WavesKeeper","withKeeper","cb","initialPromise","api","Attributes","item","className","style","attributes","moment","to","unrevealed_count","getImage","reduce","prev","curr","charCodeAt","Card","card","onClick","navigate","src","alt","Title","title","level","CardAdd","add","Cards","items","cards","Section","children","section","Option","Select","CreateAuctionPL","handleSubmit","e","preventDefault","props","form","validateFields","values","log","signAndPublishTransaction","lotTx","normFile","Array","isArray","fileList","getFieldDecorator","this","labelCol","span","wrapperCol","onSubmit","Item","label","hasFeedback","step","offset","htmlType","React","Component","Form","create","CreateLotPL","upload","valuePropName","getValueFromEvent","action","listType","accept","columns","dataIndex","DetailsTable","lot_amount","lot_assetId","second_price","top_price","Settle","settle","Object","entries","dataSource","pagination","showHeader","Details","useState","undefined","bidAmount","setBidAmount","useEffect","find","min","formatter","toFixed","parser","parseFloat","onChange","Header","amount","state","path","usePath","float","color","marginRight","theme","mode","selectedKeys","lineHeight","param","SubMenu","account","ItemGroup","disabled","address","balance","available","parseInt","toString","network","Page","Content","Footer","App","useRedirect","setState","setAuctions","window","onload","keeperApi","catch","error","notification","message","getAuctions","routes","CreateLot","CreateAuction","routeResult","useRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cd90b87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__314Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","import { sha256, base64Encode, stringToBytes } from '@waves/ts-lib-crypto';\r\n\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr_organizer.*\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL_.*\r\n\r\nconst WAVES = 10 ** 8;\r\n\r\ntype ResponseItem = {\r\n  type: string;\r\n  value: string;\r\n  key: string;\r\n};\r\n\r\nexport type AuctionDetails = {\r\n  id: string;\r\n\r\n  lot_amount?: string;\r\n\r\n  /** base58 адрес устроителя аукциона */\r\n  organizer?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  lot_assetId?: string;\r\n  // lot_asset_id?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  priceAssetId?: string;\r\n  // price_asset_id?: string;\r\n  /** начальная (минимальная) цена лота */\r\n  startPrice?: string;\r\n  // start_price?: string;\r\n  /** наивысшая раскрытая цена */\r\n  top_price?: string;\r\n  /** вторая раскрытая цена */\r\n  second_price?: string;\r\n  /** base58 адрес победителя аукциона */\r\n  winner?: string;\r\n  /** номер блока (выста) с которой начинается фаза раскрытия */\r\n  reveal_start?: string;\r\n  /** номер блока (выста) с которой начинается фаза окончения */\r\n  closing_start?: string;\r\n  /** размер депозита (максимальной ставки) для участия в аукционе */\r\n  deposit?: string;\r\n  /** количество не раскрывшихся участников */\r\n  unrevealed_count?: string;\r\n  /** признак что аукцион завершился (деньги перечислены организатору, а лот участнику) */\r\n  settle?: boolean;\r\n};\r\n\r\nexport type Lot = {\r\n  name: string; // Token name\r\n  imageUrl: string; // URL Preview на аукцион\r\n};\r\n\r\nexport type Auction = {\r\n  assetId: string;\r\n  duration: number;\r\n  startPrice: number;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type Bid = {\r\n  auctionId: string;\r\n  hash: string;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type HashedBid = {\r\n  amount: number;\r\n  salt: string;\r\n  hashedAmount: string;\r\n};\r\n\r\nexport type Reveal = {\r\n  auctionId: string;\r\n  salt: string;\r\n  amount: number;\r\n};\r\n\r\nexport type TxResponse = {\r\n  id: string;\r\n  sender: string;\r\n  senderPublicKey: string;\r\n  timestamp: number;\r\n};\r\n\r\nexport type Error = {\r\n  error: string;\r\n  message: string;\r\n};\r\n\r\nexport type SignatureCallback = (txData: any) => Promise<any>;\r\n\r\nfunction fetchWrapper(url: string): Promise<ResponseItem[]> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nfunction generalFetchWrapper(url: string): Promise<any> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nconst CONTRACT_ADDRESS = '3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd';\r\n\r\nconst BASE_URL = 'https://nodes-testnet.wavesnodes.com';\r\n\r\nexport function toShortTokenAmount(amount: string | number) {\r\n  return (parseInt('' + amount) / WAVES).toString();\r\n}\r\nexport function getUrl(url: string): string {\r\n  return `${BASE_URL}/${url}`;\r\n}\r\n\r\nexport function getDataUrl(matches: string): string {\r\n  return getUrl(`addresses/data/${CONTRACT_ADDRESS}?matches=${matches}`);\r\n}\r\n\r\nexport async function getAuctionIds(organizer = '.*'): Promise<string[]> {\r\n  const res = await fetchWrapper(getDataUrl(organizer + '_organizer'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(...res[i].value.trim().split(' '));\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getAuctionDetails(auctionId: string) {\r\n  const res = await fetchWrapper(getDataUrl(auctionId + '_.*'));\r\n  let auctionDetails: AuctionDetails = {\r\n    id: res[0].key.split('_')[0],\r\n  };\r\n  for (let i = 0; i < res.length; i++) {\r\n    const key = res[i].key.substr(res[i].key.indexOf('_') + 1);\r\n    const val = res[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n  return auctionDetails;\r\n}\r\n\r\nexport async function getAuctions(organizer?: string) {\r\n  const auctionIds = await getAuctionIds(organizer);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function createLot(\r\n  lot: Lot,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 3,\r\n    data: {\r\n      name: lot.name,\r\n      description: lot.imageUrl,\r\n      quantity: 1,\r\n      precision: 0,\r\n      reissuable: false,\r\n      fee: {\r\n        tokens: '0.001',\r\n        assetId: 'WAVES',\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function startAuction(\r\n  auction: Auction,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  if (auction.startPrice >= auction.deposit) {\r\n    throw new Error('start price should be >= deposit');\r\n  }\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'startAuction',\r\n        args: [\r\n          {\r\n            type: 'integer',\r\n            value: auction.duration,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.startPrice,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: auction.priceAssetId || 'WAVES',\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.deposit,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: 1,\r\n          assetId: auction.assetId,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\n// Performs the following computation from smart contract in Typescript:\r\n// base64(hash(SALT + bidAmount.toString()))\r\n//\r\nexport function toHash(amount: number): HashedBid {\r\n  const bidStr = amount.toString();\r\n  const salt = randomStr();\r\n  const strToHash = salt + bidStr;\r\n  const bytesToHash = stringToBytes(strToHash);\r\n  const hashBytes = sha256(bytesToHash);\r\n  const hashedAmount = base64Encode(hashBytes);\r\n  return {\r\n    amount,\r\n    salt,\r\n    hashedAmount,\r\n  };\r\n}\r\n\r\nexport async function bid(\r\n  bid: Bid,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'bid',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: bid.auctionId,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: bid.hash,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: bid.deposit,\r\n          assetId: bid.priceAssetId || 'WAVES',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function reveal(\r\n  reveal: Reveal,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'reveal',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: reveal.auctionId,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: reveal.amount,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: reveal.salt,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function withdraw(\r\n  auctionId: string,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'withdraw',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: auctionId,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function getTxInfo(txid: string): Promise<Error | TxResponse> {\r\n  const url = getUrl(`transactions/info/${txid}`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function awaitTx(txid: string): Promise<TxResponse> {\r\n  return new Promise(function(resolve) {\r\n    (async function wait() {\r\n      const info = await getTxInfo(txid);\r\n      if (!(info as Error).error) return resolve(info as TxResponse);\r\n      setTimeout(wait, 300);\r\n    })();\r\n  });\r\n}\r\n\r\nexport function randomStr() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n","import { Observable, timer } from 'rxjs';\r\nimport { delay, map, retryWhen, take } from 'rxjs/operators';\r\n\r\ndeclare const WavesKeeper: IWavesKeeperOptions;\r\n\r\nexport type IWavesNetworkCode = 'W' | 'T';\r\n\r\nexport interface IPublicState {\r\n  initialized: boolean;\r\n  locked?: boolean;\r\n  account?: {\r\n    address: string;\r\n    balance: { available: string; leasedOut: string };\r\n    name: string;\r\n    networkCode: string;\r\n    network: string;\r\n    publicKey: string;\r\n    type: string;\r\n  };\r\n  network?: {\r\n    code: IWavesNetworkCode;\r\n    matcher: string;\r\n    server: string;\r\n  };\r\n}\r\n\r\nexport interface IWavesKeeperAuthData {\r\n  data: string;\r\n  name?: string;\r\n  referrer?: string;\r\n  icon?: string;\r\n}\r\n\r\nexport interface IWavesKeeperAuthResult {\r\n  address: string;\r\n  data: string;\r\n  host: string;\r\n  prefix: string;\r\n  publicKey: string;\r\n  signature: string;\r\n}\r\n\r\nexport interface IWavesKeeperOptions {\r\n  auth: (authData: IWavesKeeperAuthData) => Promise<IWavesKeeperAuthResult>;\r\n  publicState: () => Promise<IPublicState>;\r\n  signAndPublishOrder: (order: { type: number; data: any }) => Promise<string>;\r\n  signAndPublishTransaction: (transaction: {\r\n    type: number;\r\n    data: any;\r\n  }) => Promise<string>;\r\n  on: (ev: 'update', cb: (state: IPublicState) => void) => void;\r\n}\r\n\r\nclass KeeperHelper {\r\n  get keeper(): IWavesKeeperOptions | undefined {\r\n    if (\r\n      typeof WavesKeeper === 'undefined' ||\r\n      !WavesKeeper ||\r\n      !WavesKeeper.publicState\r\n    ) {\r\n      return undefined;\r\n    }\r\n    return WavesKeeper;\r\n  }\r\n\r\n  async init(): Promise<IWavesKeeperOptions | undefined> {\r\n    return new Promise(async (resolve, reject) => {\r\n      const keeperObs = this._getKeeperObs();\r\n\r\n      keeperObs.subscribe(\r\n        (val) => {\r\n          console.info('Keeper initialized');\r\n          resolve(val);\r\n        },\r\n        (err) => {\r\n          reject('No Keeper detected');\r\n        },\r\n        () => {\r\n          if (!this.keeper) {\r\n            reject('No Keeper detected');\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getPublicState(): IPublicState {\r\n    const storageItem = localStorage.getItem('publicState');\r\n    return storageItem && JSON.parse(storageItem);\r\n  }\r\n\r\n  setPublicState(publicState: IPublicState | null): void {\r\n    localStorage.setItem('publicState', JSON.stringify(publicState));\r\n  }\r\n\r\n  _getKeeperObs(): Observable<IWavesKeeperOptions | undefined> {\r\n    return timer(200).pipe(\r\n      map(() => {\r\n        if (!this.keeper) {\r\n          throw new Error('No Keeper');\r\n        }\r\n        return this.keeper;\r\n      }),\r\n      retryWhen((errs) =>\r\n        errs.pipe(\r\n          delay(200),\r\n          take(4)\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default new KeeperHelper();\r\n","/** This is temporary solution! I need to use KeeperHelper class instead */\r\n\r\nimport { IWavesKeeperOptions, IPublicState } from './keeper';\r\n\r\ndeclare const WavesKeeper: { initialPromise: Promise<IWavesKeeperOptions> };\r\n\r\nexport function tmpKeeperInit(): Promise<IPublicState> {\r\n  return new Promise((resolve, reject) => {\r\n    window.onload = function() {\r\n      if (typeof WavesKeeper === 'undefined') {\r\n        return reject('Keeper is not installed!');\r\n      }\r\n\r\n      WavesKeeper.initialPromise.then((keeperApi: IWavesKeeperOptions) => {\r\n        keeperApi.publicState().then((state) => {\r\n          console.log({ state });\r\n          resolve(state);\r\n        });\r\n      });\r\n    };\r\n  });\r\n}\r\n\r\nexport const withKeeper = (cb: (IWavesKeeperOptions) => any) => {\r\n  WavesKeeper.initialPromise.then((api) => {\r\n    cb(api);\r\n  });\r\n};\r\n","import { Icon } from 'antd';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {\r\n  item: Item;\r\n};\r\nexport const Attributes: React.FC<Props> = ({ item }) => {\r\n  return (\r\n    <div className={style.attributes}>\r\n      <div>\r\n        <Icon type=\"user\" /> {item.organizer}\r\n      </div>\r\n      <div>\r\n        <Icon type=\"clock-circle\" /> Ends {moment().to(0)}\r\n      </div>\r\n      <div>\r\n        <Icon type=\"money-collect\" /> {item.startPrice} Waves\r\n      </div>\r\n      <div>\r\n        <Icon type=\"number\" /> {item.unrevealed_count} bids\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Item } from '../types';\r\n\r\nexport function getImage(item: Item): string {\r\n  const n =\r\n    item.id.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0) % 15;\r\n\r\n  return `https://placekitten.com/800/400?image=` + n;\r\n}\r\n","import { Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Attributes } from './Attributes';\r\nimport style from './Card.module.css';\r\nimport { getImage } from '../../utils/getImage';\r\n\r\nexport type CardProps = {\r\n  item: Item;\r\n};\r\nexport const Card: React.FC<CardProps> = ({ item }) => {\r\n  const handleClick = () => navigate(`/waves/bid/${item.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={getImage(item)} alt={''} />\r\n      <Typography.Title className={style.title} level={4}>\r\n        {item.id}\r\n      </Typography.Title>\r\n      <Attributes item={item} />\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {};\r\nexport const CardAdd: React.FC<Props> = () => {\r\n  return (\r\n    <div\r\n      className={`${style.card} ${style.add}`}\r\n      onClick={() => navigate('/waves/create/lot')}\r\n      title=\"Create a new lot\"\r\n    >\r\n      <Icon className={style.add} type=\"plus\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Card } from '../Card/Card';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsProps = { items: Item[] };\r\n\r\nexport const Cards: React.FC<CardsProps> = ({ items }) => {\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd />\r\n      {items.map((item) => (\r\n        <Card key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\n\r\nexport const Section: React.FC = ({ children }) => {\r\n  return <div className={style.section}>{children}</div>;\r\n};\r\n","import { Button, Form, InputNumber, Select, Typography } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { navigate } from 'hookrouter';\nimport React from 'react';\nimport { startAuction } from '../../utils/api';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nconst { Option } = Select;\n\nclass CreateAuctionPL extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api) => {\n          const lotTx = await startAuction(\n            {\n              assetId: '',\n              duration: values['select-lot'],\n              startPrice: values['input-number-start-price'],\n              priceAssetId: 'WAVES',\n              deposit: values['input-number-deposit'],\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating an auction</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot\" hasFeedback>\n            {getFieldDecorator('select-lot', {})(\n              <Select>\n                <Option value=\"1\">1</Option>\n                {/* put lots here ................................. */}\n              </Select>\n            )}\n            <Button onClick={() => navigate('/waves/create/lot')}>\n              Create Lot\n            </Button>\n          </Form.Item>\n\n          <Form.Item label=\"Duration\">\n            {getFieldDecorator('duration', {})(<InputNumber step={1} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Start price\">\n            {getFieldDecorator('input-number-start-price', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Deposit\">\n            {getFieldDecorator('input-number-deposit', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save auction\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateAuctionPL);\n","import { Button, Form, Icon, Input, Typography, Upload } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport React from 'react';\nimport { createLot } from '../../utils/api';\nimport { IWavesKeeperOptions } from '../../utils/keeper';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nclass CreateLotPL extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api: IWavesKeeperOptions) => {\n          const lotTx = await createLot(\n            {\n              name: values['input-name'],\n              imageUrl: values.upload[0].response.url,\n              // 'https://images-na.ssl-images-amazon.com/images/I/813XSSh%2BUTL._SY679_.jpg',\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating a Lot</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot name\">\n            {getFieldDecorator('input-name', {})(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Image for lot\">\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload\n                name=\"image\"\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                listType=\"picture\"\n                accept=\"image/*\"\n              >\n                <Button>\n                  <Icon type=\"upload\" /> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save Lot\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateLotPL);\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Table } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nexport type DetailsTableProps = {\r\n  item: Item;\r\n};\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'key', dataIndex: 'key' },\r\n  { title: 'value', dataIndex: 'value' },\r\n];\r\n\r\nexport const DetailsTable: React.FC<DetailsTableProps> = ({ item }) => {\r\n  const map = {\r\n    'Auction id ': item.id,\r\n    'Max bid ': item.deposit,\r\n    'Amount ': item.lot_amount,\r\n    'Lot id ': item.lot_assetId,\r\n    'Organizer address ': item.organizer,\r\n    'Currency ': item.priceAssetId,\r\n    'Start bid ': item.startPrice,\r\n    'Time left for bids ': '@TODO',\r\n    'Second price': item.second_price\r\n      ? item.second_price\r\n      : 'Will be known after time left for bids complete',\r\n    'Top price ': item.top_price\r\n      ? item.top_price\r\n      : 'Will be known after time left for bids completed',\r\n    'Unrevealed count': item.unrevealed_count\r\n      ? item.unrevealed_count\r\n      : 'Will be known after time left for bids completed',\r\n    'Time left for reveal bids': '@TODO closing_start - today',\r\n    Settle: item.settle\r\n      ? 'Winner took the prize'\r\n      : 'The prize is held by the organizer',\r\n  };\r\n  const data = Object.entries(map).map(([key, value]) => ({ key, value }));\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      pagination={false}\r\n      showHeader={false}\r\n    ></Table>\r\n  );\r\n};\r\n","import { Button, InputNumber, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Item } from '../../types';\r\nimport { DetailsTable } from '../DetailsTable/DetailsTable';\r\nimport { Section } from '../Section/Section';\r\nimport { getImage } from '../../utils/getImage';\r\n\r\ntype Props = {\r\n  id: string;\r\n  items: Item[];\r\n};\r\nexport const Details: React.FC<Props> = ({ id, items }) => {\r\n  const [item, setItem] = useState<Item | undefined>(undefined);\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n  useEffect(() => {\r\n    setItem(items.find((item) => item.id === id) || items[0]);\r\n  }, [id, items]);\r\n  useEffect(() => {\r\n    if (item === undefined) return;\r\n    // setBidAmount(item.price);\r\n  }, [item]);\r\n\r\n  if (item === undefined) return <>Not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{item.id}</Typography.Title>\r\n      <img src={getImage(item)} alt={''} />\r\n      <DetailsTable item={item} />\r\n      <br />\r\n      <br />\r\n      <InputNumber\r\n        value={bidAmount}\r\n        min={0}\r\n        formatter={(value) => (value ? (+value / 100).toFixed(2) : '')}\r\n        parser={(value) => (value ? parseFloat(value) * 100 : 0)}\r\n        onChange={(value) => value && setBidAmount(value)}\r\n      />{' '}\r\n      <Button type=\"primary\">Bid</Button>\r\n    </Section>\r\n  );\r\n};\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { navigate, usePath } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { toShortTokenAmount } from '../../utils/api';\r\n\r\nexport type HeaderProps = {\r\n  state?: IPublicState;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ state }) => {\r\n  const path = usePath();\r\n  const handleClick = (param: ClickParam) => {\r\n    navigate(param.key);\r\n  };\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <div style={{ float: 'left', color: 'white', marginRight: 20 }}>\r\n        WAVES BIDS\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        selectedKeys={[path]}\r\n        style={{ lineHeight: '64px' }}\r\n        onClick={handleClick}\r\n      >\r\n        <Menu.Item key=\"/waves/\">All auctions</Menu.Item>\r\n        <Menu.SubMenu title=\"Create\">\r\n          <Menu.Item key=\"/waves/create/lot\">Create lot</Menu.Item>\r\n          <Menu.Item key=\"/waves/create/auction\">Create auction</Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n              {(state && state.account && state.account.name) ||\r\n                'NOT AUTHORIZED'}\r\n            </span>\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <Menu.Item key=\"/waves/auctions\">My auctions</Menu.Item>\r\n          <Menu.Item key=\"/waves/bids\">My bids</Menu.Item>\r\n          <Menu.Item key=\"/waves/lots\">My lots</Menu.Item>\r\n\r\n          <Menu.ItemGroup title=\"Info\">\r\n            <Menu.Item disabled key=\"adress\">\r\n              {state && state.account && state.account.address}\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"balance-available\">\r\n              Balance:{' '}\r\n              {state &&\r\n                state.account &&\r\n                toShortTokenAmount(state.account.balance.available)}{' '}\r\n              WAVES\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"network\">\r\n              Network: {state && state.account && state.account.network}\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport React from 'react';\nimport Header, { HeaderProps } from '../Header/Header';\n\ntype PageProps = HeaderProps;\n\nconst Page: React.FC<PageProps> = ({ children, state }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header state={state} />\n      <Layout.Content>{children}</Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default Page;\n","import { notification } from 'antd';\nimport { HookRouter, useRedirect, useRoutes } from 'hookrouter';\nimport React, { useEffect, useState } from 'react';\nimport { AuctionDetails, getAuctions } from '../../utils/api';\nimport { IPublicState } from '../../utils/keeper';\nimport { tmpKeeperInit } from '../../utils/tmpSimpleKeeper';\nimport { Cards } from '../Cards/Cards';\nimport CreateAuction from '../Create/CreateAuction';\nimport CreateLot from '../Create/CreateLot';\nimport { Details } from '../Details/Details';\nimport Page from '../Page/Page';\n\nexport const App = () => {\n  useRedirect('/', '/waves/');\n  const [state, setState] = useState<IPublicState>();\n  const [auctions, setAuctions] = useState<AuctionDetails[]>();\n  useEffect(() => {\n    // @FIXME\n    tmpKeeperInit()\n      .then((state) => {\n        setState(state);\n      })\n      .catch((error) => {\n        notification.error({\n          message: error,\n          description:\n            'You need to install and configure Waves Keeper chrome extension in order to use this site!',\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    // const organizer = state.account!.address;\n    const organizer = '3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr';\n    getAuctions(organizer).then((auctions) => {\n      setAuctions(auctions);\n    });\n  }, []);\n\n  const routes: HookRouter.RouteObject = {\n    '/waves/': () => <Cards items={auctions || []} />,\n    '/waves/auctions': () => <Cards items={auctions || []} />,\n    '/waves/lots': () => <Cards items={auctions || []} />,\n    '/waves/bids': () => <Cards items={auctions || []} />,\n    '/waves/create/lot': () => <CreateLot />,\n    '/waves/create/auction': () => <CreateAuction />,\n    '/waves/bid/:id': ({ id }) => <Details id={id} items={auctions || []} />,\n  };\n\n  const routeResult = useRoutes(routes);\n\n  return <Page state={state}>{routeResult || '404. Page not found'}</Page>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"add\":\"Card_add__1pgKF\",\"title\":\"Card_title__2pVhP\",\"attributes\":\"Card_attributes__16E1C\"};"],"sourceRoot":""}