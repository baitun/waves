{"version":3,"sources":["components/Cards/Cards.module.css","components/Section/Section.module.css","components/Card/Card.module.css","utils/api.ts","utils/tmpSimpleKeeper.ts","components/Section/Section.tsx","components/Bids/Bids.tsx","utils/getImage.ts","components/Card/Card.tsx","components/Card/CardAdd.tsx","components/Cards/CardsAuctions.tsx","components/Card/CardLot.tsx","components/Cards/CardsLots.tsx","mocks.ts","components/Create/CreateAuction.tsx","components/Create/CreateLot.tsx","components/DetailsTable/DetailsTable.tsx","components/Details/AuctionDetails.tsx","components/Details/LotDetails.tsx","components/Header/Header.tsx","components/Page/Page.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","WAVES","fetchWrapper","url","fetch","then","response","json","CONTRACT_ADDRESS","BASE_URL","getUrl","getDataUrl","matches","getAuctionIds","a","organizer","res","auctionIds","i","length","push","value","trim","split","getAuctionDetails","auctionId","auctionDetails","id","key","substr","indexOf","val","promises","map","Promise","all","auctions","createLot","lot","sign","tx","type","data","name","description","imageUrl","quantity","precision","reissuable","fee","tokens","assetId","JSON","parse","startAuction","auction","startPrice","deposit","Error","dappAddress","call","function","args","duration","priceAssetId","payment","withKeeper","cb","WavesKeeper","initialPromise","api","Section","children","className","style","section","columns","title","dataIndex","Bids","useState","bids","setBids","useEffect","hash","Title","level","dataSource","pagination","getImage","item","reduce","prev","curr","charCodeAt","Card","card","onClick","navigate","src","alt","attributes","moment","to","unrevealed_count","CardAdd","props","add","CardsAuctions","cards","CardLot","CardsLots","lots","setLots","Option","Select","CreateAuctionPL","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","signAndPublishTransaction","lotTx","info","normFile","Array","isArray","fileList","getFieldDecorator","this","labelCol","span","wrapperCol","onSubmit","Item","label","hasFeedback","step","offset","htmlType","React","Component","Form","create","CreateLotPL","upload","valuePropName","getValueFromEvent","action","listType","accept","DetailsTable","lot_amount","lot_assetId","second_price","top_price","Settle","settle","Object","entries","showHeader","AuctionDetails","state","bidAmount","setBidAmount","undefined","account","address","min","formatter","toFixed","parser","parseFloat","onChange","LotDetails","setLot","find","l","Header","amount","path","usePath","float","color","marginRight","theme","mode","selectedKeys","lineHeight","param","SubMenu","ItemGroup","disabled","balance","available","parseInt","toString","network","Page","Content","Footer","App","useRedirect","setState","setAuctions","resolve","reject","window","onload","keeperApi","publicState","catch","error","notification","message","getAuctions","routes","CreateLot","CreateAuction","routeResult","useRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15d97ae6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__314Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"add\":\"Card_add__1pgKF\",\"title\":\"Card_title__2pVhP\",\"attributes\":\"Card_attributes__16E1C\"};","import { sha256, base64Encode, stringToBytes } from '@waves/ts-lib-crypto';\r\n\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr_organizer.*\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL_.*\r\n\r\nconst WAVES = 10 ** 8;\r\n\r\ntype ResponseItem = {\r\n  type: string;\r\n  value: string;\r\n  key: string;\r\n};\r\n\r\nexport type IAuctionDetails = {\r\n  id: string;\r\n\r\n  lot_amount?: string;\r\n\r\n  /** base58 адрес устроителя аукциона */\r\n  organizer?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  lot_assetId?: string;\r\n  // lot_asset_id?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  priceAssetId?: string;\r\n  // price_asset_id?: string;\r\n  /** начальная (минимальная) цена лота */\r\n  startPrice?: string;\r\n  // start_price?: string;\r\n  /** наивысшая раскрытая цена */\r\n  top_price?: string;\r\n  /** вторая раскрытая цена */\r\n  second_price?: string;\r\n  /** base58 адрес победителя аукциона */\r\n  winner?: string;\r\n  /** номер блока (выста) с которой начинается фаза раскрытия */\r\n  reveal_start?: string;\r\n  /** номер блока (выста) с которой начинается фаза окончения */\r\n  closing_start?: string;\r\n  /** размер депозита (максимальной ставки) для участия в аукционе */\r\n  deposit?: string;\r\n  /** количество не раскрывшихся участников */\r\n  unrevealed_count?: string;\r\n  /** признак что аукцион завершился (деньги перечислены организатору, а лот участнику) */\r\n  settle?: boolean;\r\n};\r\n\r\nexport type ILot = {\r\n  name: string; // Token name\r\n  imageUrl: string; // URL Preview на аукцион\r\n};\r\n\r\nexport type ILotDetails = ILot & { id: string };\r\n\r\nexport type Auction = {\r\n  assetId: string;\r\n  duration: number;\r\n  startPrice: number;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type Bid = {\r\n  auctionId: string;\r\n  hash: string;\r\n  /** валюта аукциона (base58 адрес токена валюты или строка 'WAVES') */\r\n  priceAssetId?: string;\r\n  /** размер депозита участника (максимальная цена) по аукциону */\r\n  deposit: number;\r\n};\r\n\r\nexport type HashedBid = {\r\n  amount: number;\r\n  salt: string;\r\n  hashedAmount: string;\r\n};\r\n\r\nexport type Reveal = {\r\n  auctionId: string;\r\n  salt: string;\r\n  amount: number;\r\n};\r\n\r\nexport type TxResponse = {\r\n  id: string;\r\n  sender: string;\r\n  senderPublicKey: string;\r\n  timestamp: number;\r\n};\r\n\r\nexport type Error = {\r\n  error: string;\r\n  message: string;\r\n};\r\n\r\nexport type SignatureCallback = (txData: any) => Promise<any>;\r\n\r\nfunction fetchWrapper(url: string): Promise<ResponseItem[]> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nfunction generalFetchWrapper(url: string): Promise<any> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nconst CONTRACT_ADDRESS = '3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd';\r\n\r\nconst BASE_URL = 'https://nodes-testnet.wavesnodes.com';\r\n\r\nexport function toShortTokenAmount(amount: string | number) {\r\n  return (parseInt('' + amount) / WAVES).toString();\r\n}\r\nexport function getUrl(url: string): string {\r\n  return `${BASE_URL}/${url}`;\r\n}\r\n\r\nexport function getDataUrl(matches: string): string {\r\n  return getUrl(`addresses/data/${CONTRACT_ADDRESS}?matches=${matches}`);\r\n}\r\n\r\nexport async function getAuctionIds(organizer = '.*'): Promise<string[]> {\r\n  const res = await fetchWrapper(getDataUrl(organizer + '_organizer'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(...res[i].value.trim().split(' '));\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getAuctionDetails(auctionId: string) {\r\n  const res = await fetchWrapper(getDataUrl(auctionId + '_.*'));\r\n  let auctionDetails: IAuctionDetails = {\r\n    id: res[0].key.split('_')[0],\r\n  };\r\n  for (let i = 0; i < res.length; i++) {\r\n    const key = res[i].key.substr(res[i].key.indexOf('_') + 1);\r\n    const val = res[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n  return auctionDetails;\r\n}\r\n\r\nexport async function getAuctions(organizer?: string) {\r\n  const auctionIds = await getAuctionIds(organizer);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function createLot(\r\n  lot: ILot,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 3,\r\n    data: {\r\n      name: lot.name,\r\n      description: lot.imageUrl,\r\n      quantity: 1,\r\n      precision: 0,\r\n      reissuable: false,\r\n      fee: {\r\n        tokens: '0.001',\r\n        assetId: 'WAVES',\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function startAuction(\r\n  auction: Auction,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  if (auction.startPrice >= auction.deposit) {\r\n    throw new Error('start price should be >= deposit');\r\n  }\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'startAuction',\r\n        args: [\r\n          {\r\n            type: 'integer',\r\n            value: auction.duration,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.startPrice,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: auction.priceAssetId || 'WAVES',\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.deposit,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: 1,\r\n          assetId: auction.assetId,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\n// Performs the following computation from smart contract in Typescript:\r\n// base64(hash(SALT + bidAmount.toString()))\r\n//\r\nexport function toHash(amount: number): HashedBid {\r\n  const bidStr = amount.toString();\r\n  const salt = randomStr();\r\n  const strToHash = salt + bidStr;\r\n  const bytesToHash = stringToBytes(strToHash);\r\n  const hashBytes = sha256(bytesToHash);\r\n  const hashedAmount = base64Encode(hashBytes);\r\n  return {\r\n    amount,\r\n    salt,\r\n    hashedAmount,\r\n  };\r\n}\r\n\r\nexport async function bid(\r\n  bid: Bid,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'bid',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: bid.auctionId,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: bid.hash,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: bid.deposit,\r\n          assetId: bid.priceAssetId || 'WAVES',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function reveal(\r\n  reveal: Reveal,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'reveal',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: reveal.auctionId,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: reveal.amount,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: reveal.salt,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function withdraw(\r\n  auctionId: string,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'withdraw',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: auctionId,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function getTxInfo(txid: string): Promise<Error | TxResponse> {\r\n  const url = getUrl(`transactions/info/${txid}`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function awaitTx(txid: string): Promise<TxResponse> {\r\n  return new Promise(function(resolve) {\r\n    (async function wait() {\r\n      const info = await getTxInfo(txid);\r\n      if (!(info as Error).error) return resolve(info as TxResponse);\r\n      setTimeout(wait, 300);\r\n    })();\r\n  });\r\n}\r\n\r\nexport function randomStr() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n","/** This is temporary solution! I need to use KeeperHelper class instead */\r\n\r\nimport { IWavesKeeperOptions, IPublicState } from './keeper';\r\n\r\ndeclare const WavesKeeper: { initialPromise: Promise<IWavesKeeperOptions> };\r\n\r\nexport function tmpKeeperInit(): Promise<IPublicState> {\r\n  return new Promise((resolve, reject) => {\r\n    window.onload = function() {\r\n      if (typeof WavesKeeper === 'undefined') {\r\n        return reject('Keeper is not installed!');\r\n      }\r\n\r\n      WavesKeeper.initialPromise.then((keeperApi: IWavesKeeperOptions) => {\r\n        keeperApi.publicState().then((state) => {\r\n          console.log({ state });\r\n          resolve(state);\r\n        });\r\n      });\r\n    };\r\n  });\r\n}\r\n\r\nexport const withKeeper = (cb: (options: IWavesKeeperOptions) => any) => {\r\n  WavesKeeper.initialPromise.then((api) => {\r\n    cb(api);\r\n  });\r\n};\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\n\r\nexport const Section: React.FC = ({ children }) => {\r\n  return <div className={style.section}>{children}</div>;\r\n};\r\n","import { Table, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Bid } from '../../utils/api';\r\nimport { Section } from '../Section/Section';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'Auction ID', dataIndex: 'auctionId' },\r\n  { title: 'deposit', dataIndex: 'deposit' },\r\n];\r\n\r\ntype Props = {};\r\nexport const Bids: React.FC<Props> = () => {\r\n  const [bids, setBids] = useState<Bid[]>([]);\r\n\r\n  useEffect(() => {\r\n    const bids: Bid[] = [\r\n      {\r\n        auctionId: 'TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL',\r\n        hash: 'hashhashhashhashhashhashhashhash',\r\n        priceAssetId: 'WAVES',\r\n        deposit: 1000,\r\n      },\r\n    ];\r\n    setBids(bids);\r\n  }, []);\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>My bids</Typography.Title>\r\n\r\n      <Table columns={columns} dataSource={bids} pagination={false}></Table>\r\n    </Section>\r\n  );\r\n};\r\n","import { Item } from '../types';\r\n\r\nexport function getImage(item: Item): string {\r\n  const n =\r\n    item.id.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0) % 15;\r\n\r\n  return `https://placekitten.com/800/400?image=` + n;\r\n}\r\n","import { Icon, Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport { getImage } from '../../utils/getImage';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardProps = {\r\n  item: Item;\r\n};\r\nexport const Card: React.FC<CardProps> = ({ item }) => {\r\n  const handleClick = () => navigate(`/waves/auction/${item.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={getImage(item)} alt={''} />\r\n      <Typography.Title className={style.title} level={4}>\r\n        {item.id}\r\n      </Typography.Title>\r\n      <div className={style.attributes}>\r\n        <div>\r\n          <Icon type=\"user\" /> {item.organizer}\r\n        </div>\r\n        <div>\r\n          <Icon type=\"clock-circle\" /> Ends {moment().to(0)}\r\n        </div>\r\n        <div>\r\n          <Icon type=\"money-collect\" /> {item.startPrice} Waves\r\n        </div>\r\n        <div>\r\n          <Icon type=\"number\" /> {item.unrevealed_count} bids\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from 'antd';\r\nimport React from 'react';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  title: string;\r\n};\r\nexport const CardAdd: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${style.card} ${style.add}`} {...props}>\r\n      <Icon type=\"plus\" />\r\n    </div>\r\n  );\r\n};\r\n","import { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IAuctionDetails } from '../../utils/api';\r\nimport { Card } from '../Card/Card';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsProps = { auctions: IAuctionDetails[] };\r\n\r\nexport const CardsAuctions: React.FC<CardsProps> = ({ auctions }) => {\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd\r\n        onClick={() => navigate('/waves/create/lot')}\r\n        title=\"Create a new lot\"\r\n      />\r\n      {auctions.map((item) => (\r\n        <Card key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardLotProps = {\r\n  lot: ILotDetails;\r\n};\r\nexport const CardLot: React.FC<CardLotProps> = ({ lot }) => {\r\n  const handleClick = () => navigate(`/waves/lot/${lot.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={lot.imageUrl} alt={''} />\r\n\r\n      <Typography.Title className={style.title} level={4}>\r\n        {lot.name}\r\n      </Typography.Title>\r\n    </div>\r\n  );\r\n};\r\n","import { navigate } from 'hookrouter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getLots } from '../../mocks';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport { CardLot } from '../Card/CardLot';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsLotsProps = {};\r\n\r\nexport const CardsLots: React.FC<CardsLotsProps> = () => {\r\n  const [lots, setLots] = useState<ILotDetails[]>([]);\r\n\r\n  useEffect(() => {\r\n    setLots(getLots());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd\r\n        onClick={() => navigate('/waves/create/lot')}\r\n        title=\"Create a new lot\"\r\n      />\r\n      {lots.map((lot) => (\r\n        <CardLot key={lot.id} lot={lot} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { ILotDetails } from './utils/api';\r\n\r\nexport function getLots(adress?: string): ILotDetails[] {\r\n  return [\r\n    {\r\n      id: 'Z37nfqZnoAziZrRkS1JPuAbSXVegkY6cRAkPNaLVYKd',\r\n      name: 'Lot number 1',\r\n      imageUrl: 'https://placekitten.com/800/400?image=10',\r\n    },\r\n    {\r\n      id: '8rwEzFBYzReR3csc5PvpjTdcj5uPddtkuDxB2tUx2wno',\r\n      name: 'Lot number 2',\r\n      imageUrl: 'https://placekitten.com/800/400?image=1',\r\n    },\r\n  ];\r\n}\r\n","import { Button, Form, InputNumber, Select, Typography } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { navigate } from 'hookrouter';\nimport React from 'react';\nimport { startAuction } from '../../utils/api';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nconst { Option } = Select;\n\nclass CreateAuctionPL extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api) => {\n          const lotTx = await startAuction(\n            {\n              assetId: '',\n              duration: values['select-lot'],\n              startPrice: values['input-number-start-price'],\n              priceAssetId: 'WAVES',\n              deposit: values['input-number-deposit'],\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating an auction</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot\" hasFeedback>\n            {getFieldDecorator('select-lot', {})(\n              <Select>\n                <Option value=\"1\">1</Option>\n                {/* put lots here ................................. */}\n              </Select>\n            )}\n            <Button onClick={() => navigate('/waves/create/lot')}>\n              Create Lot\n            </Button>\n          </Form.Item>\n\n          <Form.Item label=\"Duration\">\n            {getFieldDecorator('duration', {})(<InputNumber step={1} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Start price\">\n            {getFieldDecorator('input-number-start-price', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Deposit\">\n            {getFieldDecorator('input-number-deposit', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save auction\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateAuctionPL);\n","import { Button, Form, Icon, Input, Typography, Upload } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport React from 'react';\nimport { createLot } from '../../utils/api';\nimport { IWavesKeeperOptions } from '../../utils/keeper';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nclass CreateLotPL extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api: IWavesKeeperOptions) => {\n          const lotTx = await createLot(\n            {\n              name: values['input-name'],\n              imageUrl: values.upload[0].response.url,\n              // 'https://images-na.ssl-images-amazon.com/images/I/813XSSh%2BUTL._SY679_.jpg',\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating a Lot</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot name\">\n            {getFieldDecorator('input-name', {})(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Image for lot\">\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload\n                name=\"image\"\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                listType=\"picture\"\n                accept=\"image/*\"\n              >\n                <Button>\n                  <Icon type=\"upload\" /> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save Lot\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateLotPL);\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Table } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nexport type DetailsTableProps = {\r\n  item: Item;\r\n};\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'key', dataIndex: 'key' },\r\n  { title: 'value', dataIndex: 'value' },\r\n];\r\n\r\nexport const DetailsTable: React.FC<DetailsTableProps> = ({ item }) => {\r\n  const map = {\r\n    'Auction id ': item.id,\r\n    'Max bid ': item.deposit,\r\n    'Amount ': item.lot_amount,\r\n    'Lot id ': item.lot_assetId,\r\n    'Organizer address ': item.organizer,\r\n    'Currency ': item.priceAssetId,\r\n    'Start bid ': item.startPrice,\r\n    'Time left for bids ': '@TODO',\r\n    'Second price': item.second_price\r\n      ? item.second_price\r\n      : 'Will be known after time left for bids complete',\r\n    'Top price ': item.top_price\r\n      ? item.top_price\r\n      : 'Will be known after time left for bids completed',\r\n    'Unrevealed count': item.unrevealed_count\r\n      ? item.unrevealed_count\r\n      : 'Will be known after time left for bids completed',\r\n    'Time left for reveal bids': '@TODO closing_start - today',\r\n    Settle: item.settle\r\n      ? 'Winner took the prize'\r\n      : 'The prize is held by the organizer',\r\n  };\r\n  const data = Object.entries(map).map(([key, value]) => ({ key, value }));\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      pagination={false}\r\n      showHeader={false}\r\n    ></Table>\r\n  );\r\n};\r\n","import { Button, InputNumber, Typography } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { IAuctionDetails } from '../../utils/api';\r\nimport { getImage } from '../../utils/getImage';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { DetailsTable } from '../DetailsTable/DetailsTable';\r\nimport { Section } from '../Section/Section';\r\n\r\ntype Props = {\r\n  auction?: IAuctionDetails;\r\n  state?: IPublicState;\r\n};\r\nexport const AuctionDetails: React.FC<Props> = ({ auction, state }) => {\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n\r\n  if (auction === undefined) return <>Auction not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{auction.id}</Typography.Title>\r\n      <img src={getImage(auction)} alt={''} />\r\n      <DetailsTable item={auction} />\r\n      <br />\r\n      <br />\r\n\r\n      {state!.account!.address === auction.organizer ? (\r\n        <>\r\n          <Button type=\"primary\">SETTLE</Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <InputNumber\r\n            value={bidAmount}\r\n            min={0}\r\n            formatter={(value) => (value ? (+value / 100).toFixed(2) : '')}\r\n            parser={(value) => (value ? parseFloat(value) * 100 : 0)}\r\n            onChange={(value) => value && setBidAmount(value)}\r\n          />{' '}\r\n          <Button type=\"primary\">Bid</Button>\r\n        </>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n","import { Typography, Button } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getLots } from '../../mocks';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport { Section } from '../Section/Section';\r\nimport { navigate } from 'hookrouter';\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\nexport const LotDetails: React.FC<Props> = ({ id }) => {\r\n  const [lot, setLot] = useState<ILotDetails>();\r\n\r\n  useEffect(() => {\r\n    const lots = getLots();\r\n    setLot(lots.find((l) => l.id === id));\r\n  }, [id]);\r\n\r\n  if (lot === undefined) return <>Lot not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{lot.name}</Typography.Title>\r\n      <img src={lot.imageUrl} alt={''} />\r\n      <br />\r\n      <br />\r\n      <Button onClick={() => navigate('/waves/create/auction')} type=\"primary\">\r\n        Send to auction\r\n      </Button>\r\n    </Section>\r\n  );\r\n};\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { navigate, usePath } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { toShortTokenAmount } from '../../utils/api';\r\n\r\nexport type HeaderProps = {\r\n  state?: IPublicState;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ state }) => {\r\n  const path = usePath();\r\n  const handleClick = (param: ClickParam) => {\r\n    navigate(param.key);\r\n  };\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <div style={{ float: 'left', color: 'white', marginRight: 20 }}>\r\n        WAVES BIDS\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        selectedKeys={[path]}\r\n        style={{ lineHeight: '64px' }}\r\n        onClick={handleClick}\r\n      >\r\n        <Menu.Item key=\"/waves/\">All auctions</Menu.Item>\r\n        <Menu.SubMenu title=\"Create\">\r\n          <Menu.Item key=\"/waves/create/lot\">Create lot</Menu.Item>\r\n          <Menu.Item key=\"/waves/create/auction\">Create auction</Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n              {(state && state.account && state.account.name) ||\r\n                'NOT AUTHORIZED'}\r\n            </span>\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <Menu.Item key=\"/waves/auctions\">My auctions</Menu.Item>\r\n          <Menu.Item key=\"/waves/bids\">My bids</Menu.Item>\r\n          <Menu.Item key=\"/waves/lots\">My lots</Menu.Item>\r\n\r\n          <Menu.ItemGroup title=\"Info\">\r\n            <Menu.Item disabled key=\"adress\">\r\n              {state && state.account && state.account.address}\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"balance-available\">\r\n              Balance:{' '}\r\n              {state &&\r\n                state.account &&\r\n                toShortTokenAmount(state.account.balance.available)}{' '}\r\n              WAVES\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"network\">\r\n              Network: {state && state.account && state.account.network}\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport React from 'react';\nimport Header, { HeaderProps } from '../Header/Header';\n\ntype PageProps = HeaderProps;\n\nconst Page: React.FC<PageProps> = ({ children, state }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header state={state} />\n      <Layout.Content>{children}</Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default Page;\n","import { notification } from 'antd';\nimport { HookRouter, useRedirect, useRoutes } from 'hookrouter';\nimport React, { useEffect, useState } from 'react';\nimport { getAuctions, IAuctionDetails } from '../../utils/api';\nimport { IPublicState } from '../../utils/keeper';\nimport { tmpKeeperInit } from '../../utils/tmpSimpleKeeper';\nimport { Bids } from '../Bids/Bids';\nimport { CardsAuctions } from '../Cards/CardsAuctions';\nimport { CardsLots } from '../Cards/CardsLots';\nimport CreateAuction from '../Create/CreateAuction';\nimport CreateLot from '../Create/CreateLot';\nimport { AuctionDetails } from '../Details/AuctionDetails';\nimport { LotDetails } from '../Details/LotDetails';\nimport Page from '../Page/Page';\n\nexport const App = () => {\n  useRedirect('/', '/waves/');\n  const [state, setState] = useState<IPublicState>();\n  const [auctions, setAuctions] = useState<IAuctionDetails[]>();\n  useEffect(() => {\n    // @FIXME\n    tmpKeeperInit()\n      .then((state) => {\n        setState(state);\n      })\n      .catch((error) => {\n        notification.error({\n          message: error,\n          description:\n            'You need to install and configure Waves Keeper chrome extension in order to use this site!',\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    // const organizer = state.account!.address;\n    const organizer = '3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr';\n    getAuctions(organizer).then((auctions) => {\n      setAuctions(auctions);\n    });\n  }, []);\n\n  const routes: HookRouter.RouteObject = {\n    '/waves/': () => <CardsAuctions auctions={auctions || []} />,\n    '/waves/auctions': () => <CardsAuctions auctions={auctions || []} />,\n    '/waves/lots': () => <CardsLots />,\n    '/waves/bids': () => <Bids />,\n    '/waves/create/lot': () => <CreateLot />,\n    '/waves/create/auction': () => <CreateAuction />,\n    '/waves/auction/:id': ({ id }) =>\n      auctions && (\n        <AuctionDetails\n          state={state}\n          auction={auctions.find((a) => a.id === id)}\n        />\n      ),\n    '/waves/lot/:id': ({ id }) => <LotDetails id={id} />,\n  };\n\n  const routeResult = useRoutes(routes);\n\n  return <Page state={state}>{routeResult || '404. Page not found'}</Page>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}