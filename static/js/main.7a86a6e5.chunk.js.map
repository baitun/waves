{"version":3,"sources":["mocks.ts","components/Card/Attributes.tsx","components/Card/Card.tsx","components/Card/CardAdd.tsx","components/Cards/Cards.tsx","components/Create/Create.js","components/Details/Details.tsx","components/Header/Header.tsx","components/Page/Page.tsx","utils/api.ts","components/App/App.tsx","utils/tmpSimpleKeeper.ts","index.tsx","components/Cards/Cards.module.css","components/Create/Create.module.css","components/Details/Details.module.css","components/Card/Card.module.css"],"names":["MOCK_ITEMS","Array","from","length","map","imageNumber","faker","random","number","uuid","name","words","author","findName","thumbnail","image","bids","price","endDate","date","future","valueOf","description","lorem","paragraph","Attributes","item","className","style","attributes","type","moment","to","toFixed","Card","card","onClick","navigate","src","alt","Title","level","CardAdd","add","title","Cards","items","cards","key","Option","Select","Create","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","isArray","fileList","getFieldDecorator","this","backgroundColor","width","maxWidth","margin","labelCol","span","wrapperCol","onSubmit","Item","label","hasFeedback","rules","required","message","placeholder","value","mode","initialValue","min","max","valuePropName","marks","0","20","40","60","80","100","Group","Button","disabled","extra","getValueFromEvent","action","listType","dropbox","Dragger","offset","htmlType","React","Component","Create2","Form","create","Details","useState","undefined","setItem","bidAmount","setBidAmount","useEffect","find","details","formatter","parser","parseFloat","onChange","Header","state","setKey","theme","selectedKeys","lineHeight","param","SubMenu","account","address","float","ItemGroup","Page","children","Content","Footer","fetchWrapper","url","fetch","then","response","json","getUrl","matches","getAuctionIds","organizer","a","res","auctionIds","trim","split","getAuctionDetails","auctionId","auctionDetails","i","substr","indexOf","val","promises","id","Promise","all","auctions","App","setState","setAuctions","WavesKeeper","initialPromise","keeperApi","publicState","getAuctions","routes","routeResult","useRoutes","ReactDOM","render","document","getElementById","module","exports"],"mappings":"oMAGaA,EAAqBC,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,IAAI,WAC9D,IAAMC,EAAcC,IAAMC,OAAOC,OAAO,IACxC,MAAO,CACLC,KAAMH,IAAMC,OAAOE,OACnBC,KAAMJ,IAAMC,OAAOI,MAAM,GACzBC,OAAQN,IAAMI,KAAKG,WACnBC,UAAU,yCAAD,OAA2CT,GACpDU,MAAM,yCAAD,OAA2CV,GAChDW,KAAMV,IAAMC,OAAOC,OAAO,KAC1BS,MAAOX,IAAMC,OAAOC,OAAO,KAC3BU,QAASZ,IAAMa,KAAKC,SAASC,UAC7BC,YAAahB,IAAMiB,MAAMC,UAAU,M,wDCL1BC,EAA8B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5C,OACE,yBAAKC,UAAWC,IAAMC,YACpB,6BACE,kBAAC,IAAD,CAAMC,KAAK,SADb,IACwBJ,EAAKd,QAE7B,6BACE,kBAAC,IAAD,CAAMkB,KAAK,iBADb,SACqCC,MAASC,GAAGN,EAAKR,UAEtD,6BACE,kBAAC,IAAD,CAAMY,KAAK,kBADb,IACiCJ,EAAKT,MAAMgB,QAAQ,GADpD,UAGA,6BACE,kBAAC,IAAD,CAAMH,KAAK,WADb,IAC0BJ,EAAKV,KAD/B,WCXOkB,EAA4B,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAE1C,OACE,yBAAKC,UAAWC,IAAMO,KAAMC,QAFV,kBAAMC,mBAAS,QAAD,OAASX,EAAKjB,SAG5C,yBAAK6B,IAAKZ,EAAKZ,UAAWyB,IAAKb,EAAKhB,OACpC,kBAAC,IAAW8B,MAAZ,CAAkBC,MAAO,GAAIf,EAAKhB,MAClC,kBAAC,EAAD,CAAYgB,KAAMA,MCVXgB,EAA2B,WACtC,OACE,yBACEf,UAAS,UAAKC,IAAMO,KAAX,YAAmBP,IAAMe,KAClCP,QAAS,kBAAMC,mBAAS,YACxBO,MAAM,oBAEN,kBAAC,IAAD,CAAMjB,UAAWC,IAAMe,IAAKb,KAAK,W,kBCL1Be,EAA8B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5C,OACE,yBAAKnB,UAAWC,IAAMmB,OACpB,kBAAC,EAAD,MACCD,EAAM1C,IAAI,SAACsB,GAAD,OACT,kBAAC,EAAD,CAAMsB,IAAKtB,EAAKjB,KAAMiB,KAAMA,Q,uLCK5BuB,EAAWC,IAAXD,OAEFE,E,2MACJC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,GACHE,QAAQC,IAAI,4BAA6BF,M,EAK/CG,SAAW,SAACT,GAEV,OADAO,QAAQC,IAAI,gBAAiBR,GACzBpD,MAAM8D,QAAQV,GACTA,EAEFA,GAAKA,EAAEW,U,wEAGN,IACAC,EAAsBC,KAAKX,MAAMC,KAAjCS,kBAKR,OACE,yBACErC,MAAO,CACLuC,gBAAiB,OACjBC,MAAO,MACPC,SAAU,IACVC,OAAQ,SAGV,kBAAC,IAAD,iBAbmB,CACrBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAWlB,CAA0BE,SAAUR,KAAKd,eACvC,kBAAC,IAAKuB,KAAN,CAAWC,MAAM,cACf,0BAAMjD,UAAU,iBAAhB,UAEF,kBAAC,IAAKgD,KAAN,CAAWC,MAAM,SAASC,aAAW,GAClCZ,EAAkB,SAAU,CAC3Ba,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iCAF9Bf,CAKC,kBAAC,IAAD,CAAQgB,YAAY,2BAClB,kBAAChC,EAAD,CAAQiC,MAAM,SAAd,SACA,kBAACjC,EAAD,CAAQiC,MAAM,OAAd,YAKN,kBAAC,IAAKP,KAAN,CAAWC,MAAM,oBACdX,EAAkB,kBAAmB,CACpCa,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,uCACTlD,KAAM,WALXmC,CASC,kBAAC,IAAD,CACEkB,KAAK,WACLF,YAAY,kCAEZ,kBAAChC,EAAD,CAAQiC,MAAM,OAAd,OACA,kBAACjC,EAAD,CAAQiC,MAAM,SAAd,SACA,kBAACjC,EAAD,CAAQiC,MAAM,QAAd,WAKN,kBAAC,IAAKP,KAAN,CAAWC,MAAM,eACdX,EAAkB,eAAgB,CAAEmB,aAAc,GAAlDnB,CACC,kBAAC,IAAD,CAAaoB,IAAK,EAAGC,IAAK,MAE5B,0BAAM3D,UAAU,iBAAhB,cAGF,kBAAC,IAAKgD,KAAN,CAAWC,MAAM,UACdX,EAAkB,SAAU,CAAEsB,cAAe,WAA7CtB,CACC,kBAAC,IAAD,QAIJ,kBAAC,IAAKU,KAAN,CAAWC,MAAM,UACdX,EAAkB,SAAlBA,CACC,kBAAC,IAAD,CACEuB,MAAO,CACLC,EAAG,IACHC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,IAAK,SAMb,kBAAC,IAAKnB,KAAN,CAAWC,MAAM,eACdX,EAAkB,cAAlBA,CACC,kBAAC,IAAM8B,MAAP,KACE,kBAAC,IAAD,CAAOb,MAAM,KAAb,UACA,kBAAC,IAAD,CAAOA,MAAM,KAAb,UACA,kBAAC,IAAD,CAAOA,MAAM,KAAb,aAKN,kBAAC,IAAKP,KAAN,CAAWC,MAAM,gBACdX,EAAkB,eAAlBA,CACC,kBAAC,IAAM8B,MAAP,KACE,kBAAC,IAAMC,OAAP,CAAcd,MAAM,KAApB,UACA,kBAAC,IAAMc,OAAP,CAAcd,MAAM,KAApB,UACA,kBAAC,IAAMc,OAAP,CAAcd,MAAM,KAApB,aAKN,kBAAC,IAAKP,KAAN,CAAWC,MAAM,kBACdX,EAAkB,iBAAkB,CACnCmB,aAAc,CAAC,IAAK,MADrBnB,CAGC,kBAAC,IAAS8B,MAAV,CAAgBnE,MAAO,CAAEwC,MAAO,SAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKI,KAAM,GACT,kBAAC,IAAD,CAAUU,MAAM,KAAhB,MAEF,kBAAC,IAAD,CAAKV,KAAM,GACT,kBAAC,IAAD,CAAUyB,UAAQ,EAACf,MAAM,KAAzB,MAIF,kBAAC,IAAD,CAAKV,KAAM,GACT,kBAAC,IAAD,CAAUU,MAAM,KAAhB,MAEF,kBAAC,IAAD,CAAKV,KAAM,GACT,kBAAC,IAAD,CAAUU,MAAM,KAAhB,MAEF,kBAAC,IAAD,CAAKV,KAAM,GACT,kBAAC,IAAD,CAAUU,MAAM,KAAhB,UAOV,kBAAC,IAAKP,KAAN,CAAWC,MAAM,QACdX,EAAkB,OAAQ,CACzBmB,aAAc,KADfnB,CAEE,kBAAC,IAAD,QAGL,kBAAC,IAAKU,KAAN,CACEC,MAAM,SACNsB,MAAM,0CAELjC,EAAkB,SAAU,CAC3BsB,cAAe,WACfY,kBAAmBjC,KAAKJ,UAFzBG,CAIC,kBAAC,IAAD,CAAQvD,KAAK,OAAO0F,OAAO,aAAaC,SAAS,WAC/C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMvE,KAAK,WADb,uBAON,kBAAC,IAAK6C,KAAN,CAAWC,MAAM,WACf,yBAAKjD,UAAWC,IAAM0E,SACnBrC,EAAkB,UAAW,CAC5BsB,cAAe,WACfY,kBAAmBjC,KAAKJ,UAFzBG,CAIC,kBAAC,IAAOsC,QAAR,CAAgB7F,KAAK,QAAQ0F,OAAO,cAClC,uBAAGzE,UAAU,wBACX,kBAAC,IAAD,CAAMG,KAAK,WAEb,uBAAGH,UAAU,mBAAb,6CAGA,uBAAGA,UAAU,mBAAb,4CAQR,kBAAC,IAAKgD,KAAN,CAAWF,WAAY,CAAED,KAAM,GAAIgC,OAAQ,IACzC,kBAAC,IAAD,CAAQ1E,KAAK,UAAU2E,SAAS,UAAhC,iB,GA/LSC,IAAMC,WA0MZC,EADCC,IAAKC,OAAO,CAAEpG,KAAM,kBAApBmG,CAAwC1D,G,kBCnN3C4D,EAA2B,SAAC,GAAc,IAAZtG,EAAW,EAAXA,KAAW,EAC5BuG,wBAA2BC,GADC,mBAC7CvF,EAD6C,KACvCwF,EADuC,OAElBF,mBAAS,GAFS,mBAE7CG,EAF6C,KAElCC,EAFkC,KAWpD,OARAC,oBAAU,WACRH,EAAQlH,EAAWsH,KAAK,SAAC5F,GAAD,OAAUA,EAAKjB,OAASA,KAAST,EAAW,KACnE,CAACS,IACJ4G,oBAAU,gBACKJ,IAATvF,GACJ0F,EAAa1F,EAAKT,QACjB,CAACS,SAESuF,IAATvF,EAA2B,iDAE7B,yBAAKC,UAAWC,IAAM2F,SACpB,kBAAC,IAAW/E,MAAZ,CAAkBC,MAAO,GAAIf,EAAKhB,MAClC,yBAAK4B,IAAKZ,EAAKX,MAAOwB,IAAKb,EAAKhB,OAChC,kBAAC,EAAD,CAAYgB,KAAMA,IAClB,2BAAIA,EAAKJ,aACT,kBAAC,IAAD,CACE4D,MAAOiC,EACP9B,IAAK,EACLmC,UAAW,SAACtC,GAAD,OAAYA,IAAUA,EAAQ,KAAKjD,QAAQ,GAAK,IAC3DwF,OAAQ,SAACvC,GAAD,OAAYA,EAA4B,IAApBwC,WAAWxC,GAAe,GACtDyC,SAAU,SAACzC,GAAD,OAAWA,GAASkC,EAAalC,MAC1C,IACH,kBAAC,IAAD,CAAQpD,KAAK,WAAb,S,oBCgBS8F,EAzCuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAC7Bb,mBAAS,KADoB,mBAC5ChE,EAD4C,KACvC8E,EADuC,KAOnD,OACE,kBAAC,IAAOF,OAAR,KACE,kBAAC,IAAD,CACEG,MAAM,OACN5C,KAAK,aACL6C,aAAc,CAAChF,GACfpB,MAAO,CAAEqG,WAAY,QACrB7F,QAZc,SAAC8F,GACnBJ,EAAOI,EAAMlF,KACbX,mBAASW,KAYL,kBAAC,IAAK2B,KAAN,CAAW3B,IAAI,KAAf,cACA,kBAAC,IAAKmF,QAAN,CACEvF,MACE,0BAAMjB,UAAU,yBACd,kBAAC,IAAD,CAAMG,KAAK,SACT+F,GAASA,EAAMO,SAAWP,EAAMO,QAAQC,SACxC,kBAGNzG,MAAO,CAAE0G,MAAO,UAEhB,kBAAC,IAAKC,UAAN,CAAgB3F,MAAM,UACpB,kBAAC,IAAK+B,KAAN,CAAW3B,IAAI,aAAf,YACA,kBAAC,IAAK2B,KAAN,CAAW3B,IAAI,aAAf,aAEF,kBAAC,IAAKuF,UAAN,CAAgB3F,MAAM,UACpB,kBAAC,IAAK+B,KAAN,CAAW3B,IAAI,aAAf,YACA,kBAAC,IAAK2B,KAAN,CAAW3B,IAAI,aAAf,iBC3BGwF,EAVmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUZ,EAAY,EAAZA,MAC7C,OACE,kBAAC,IAAD,CAAQlG,UAAU,UAChB,kBAAC,EAAD,CAAQkG,MAAOA,IACf,kBAAC,IAAOa,QAAR,KAAiBD,GACjB,kBAAC,IAAOE,OAAR,Q,6BCaN,SAASC,GAAaC,GACpB,OAAOC,MAAMD,GAAKE,KAAK,SAACC,GAAD,OAAcA,EAASC,SAGzC,SAASC,GAAOC,GAErB,MADc,mGACIA,EAGb,SAAeC,GAAtB,mC,+CAAO,WAA6BC,GAA7B,kBAAAC,EAAA,qEACaV,GAAaM,GAAOG,EAAY,iBAD7C,cACCE,EADD,OAECC,EAAaD,EAAI,GAAGrE,MAAMuE,OAAOC,MAAM,KAFxC,kBAGEF,GAHF,0C,sBAMA,SAAeG,GAAtB,mC,+CAAO,WAAiCC,GAAjC,wBAAAN,EAAA,qEACaV,GAAaM,GAAOU,EAAY,QAD7C,OAGL,IAFML,EADD,OAEDM,EAAiC,GAC5BC,EAAI,EAAGA,EAAIP,EAAIpJ,OAAQ2J,IACxB9G,EAAMuG,EAAIO,GAAG9G,IAAI+G,OAAOR,EAAIO,GAAG9G,IAAIgH,QAAQ,KAAO,GAClDC,EAAMV,EAAIO,GAAG5E,MACnB2E,EAAe7G,GAAOiH,EANnB,yBAQEJ,GARF,0C,qEAWA,WAA2BR,GAA3B,oBAAAC,EAAA,qEACoBF,GAAcC,GADlC,cACCG,EADD,OAECU,EAAWV,EAAWpJ,IAAI,SAAC+J,GAAD,OAAQR,GAAkBQ,KAFrD,SAGkBC,QAAQC,IAAIH,GAH9B,cAGCI,EAHD,yBAIEA,GAJF,0C,sBCtCA,IAgCQC,GAhCI,WAAO,IAAD,EACGvD,qBADH,mBAChBa,EADgB,KACT2C,EADS,OAESxD,qBAFT,mBAENyD,GAFM,WAGvBpD,oBAAU,WCRHqD,YAAYC,eAAe5B,KAAK,SAAC6B,GAEtC,OAAOA,EAAUC,cAAc9B,KAAK,SAAClB,GAEnC,OADAjE,QAAQC,IAAI,CAAEgE,UACPA,MDMOkB,KAAK,SAAClB,GACpB2C,EAAS3C,MAEV,IAEHR,oBAAU,WACR,QAAcJ,IAAVY,EAAJ,ED2BG,SAAP,oCCxBIiD,CADkB,uCACK/B,KAAK,SAACuB,GAC3BG,EAAYH,OAEb,CAACzC,IAEJ,IAAMkD,EAAiC,CACrC,IAAK,kBAAM,kBAAC,EAAD,CAAOjI,MAAO9C,KACzB,UAAW,kBAAM,kBAAC,EAAD,OACjB,WAAY,gBAAGmK,EAAH,EAAGA,GAAH,OAAY,kBAAC,EAAD,CAAS1J,KAAM0J,MAGnCa,EAAcC,oBAAUF,GAE9B,YAAc9D,IAAVY,EAA4B,kBAAC,IAAD,MAEzB,kBAAC,EAAD,CAAMA,MAAOA,GAAQmD,GAAe,wBEpC7CE,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U,oBCJjDC,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,QAAU,0B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,gFCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,IAAM,kBAAkB,WAAa,4B","file":"static/js/main.7a86a6e5.chunk.js","sourcesContent":["import { Item } from './types';\r\nimport faker from 'faker';\r\n\r\nexport const MOCK_ITEMS: Item[] = Array.from({ length: 5 }).map(() => {\r\n  const imageNumber = faker.random.number(15);\r\n  return {\r\n    uuid: faker.random.uuid(),\r\n    name: faker.random.words(2),\r\n    author: faker.name.findName(),\r\n    thumbnail: `https://placekitten.com/400/200?image=${imageNumber}`,\r\n    image: `https://placekitten.com/800/400?image=${imageNumber}`,\r\n    bids: faker.random.number(100),\r\n    price: faker.random.number(1000),\r\n    endDate: faker.date.future().valueOf(),\r\n    description: faker.lorem.paragraph(3),\r\n  };\r\n});\r\n","import { Icon } from 'antd';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {\r\n  item: Item;\r\n};\r\nexport const Attributes: React.FC<Props> = ({ item }) => {\r\n  return (\r\n    <div className={style.attributes}>\r\n      <div>\r\n        <Icon type=\"user\" /> {item.author}\r\n      </div>\r\n      <div>\r\n        <Icon type=\"clock-circle\" /> Ends {moment().to(item.endDate)}\r\n      </div>\r\n      <div>\r\n        <Icon type=\"money-collect\" /> {item.price.toFixed(2)} Waves\r\n      </div>\r\n      <div>\r\n        <Icon type=\"number\" /> {item.bids} bids\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Attributes } from './Attributes';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardProps = {\r\n  item: Item;\r\n};\r\nexport const Card: React.FC<CardProps> = ({ item }) => {\r\n  const handleClick = () => navigate(`/bid/${item.uuid}`);\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={item.thumbnail} alt={item.name} />\r\n      <Typography.Title level={4}>{item.name}</Typography.Title>\r\n      <Attributes item={item} />\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {};\r\nexport const CardAdd: React.FC<Props> = () => {\r\n  return (\r\n    <div\r\n      className={`${style.card} ${style.add}`}\r\n      onClick={() => navigate('/create')}\r\n      title=\"Create a new lot\"\r\n    >\r\n      <Icon className={style.add} type=\"plus\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Card } from '../Card/Card';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsProps = { items: Item[] };\r\n\r\nexport const Cards: React.FC<CardsProps> = ({ items }) => {\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd />\r\n      {items.map((item) => (\r\n        <Card key={item.uuid} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport style from './Create.module.css';\nimport {\n  Form,\n  Select,\n  InputNumber,\n  Switch,\n  Radio,\n  Slider,\n  Button,\n  Upload,\n  Icon,\n  Rate,\n  Checkbox,\n  Row,\n  Col,\n} from 'antd';\n\nconst { Option } = Select;\n\nclass Create extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <div\n        style={{\n          backgroundColor: '#fff',\n          width: '90%',\n          maxWidth: 800,\n          margin: 'auto',\n        }}\n      >\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Plain Text\">\n            <span className=\"ant-form-text\">China</span>\n          </Form.Item>\n          <Form.Item label=\"Select\" hasFeedback>\n            {getFieldDecorator('select', {\n              rules: [\n                { required: true, message: 'Please select your country!' },\n              ],\n            })(\n              <Select placeholder=\"Please select a country\">\n                <Option value=\"china\">China</Option>\n                <Option value=\"usa\">U.S.A</Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Select[multiple]\">\n            {getFieldDecorator('select-multiple', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please select your favourite colors!',\n                  type: 'array',\n                },\n              ],\n            })(\n              <Select\n                mode=\"multiple\"\n                placeholder=\"Please select favourite colors\"\n              >\n                <Option value=\"red\">Red</Option>\n                <Option value=\"green\">Green</Option>\n                <Option value=\"blue\">Blue</Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"InputNumber\">\n            {getFieldDecorator('input-number', { initialValue: 3 })(\n              <InputNumber min={1} max={10} />\n            )}\n            <span className=\"ant-form-text\"> machines</span>\n          </Form.Item>\n\n          <Form.Item label=\"Switch\">\n            {getFieldDecorator('switch', { valuePropName: 'checked' })(\n              <Switch />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Slider\">\n            {getFieldDecorator('slider')(\n              <Slider\n                marks={{\n                  0: 'A',\n                  20: 'B',\n                  40: 'C',\n                  60: 'D',\n                  80: 'E',\n                  100: 'F',\n                }}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Radio.Group\">\n            {getFieldDecorator('radio-group')(\n              <Radio.Group>\n                <Radio value=\"a\">item 1</Radio>\n                <Radio value=\"b\">item 2</Radio>\n                <Radio value=\"c\">item 3</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Radio.Button\">\n            {getFieldDecorator('radio-button')(\n              <Radio.Group>\n                <Radio.Button value=\"a\">item 1</Radio.Button>\n                <Radio.Button value=\"b\">item 2</Radio.Button>\n                <Radio.Button value=\"c\">item 3</Radio.Button>\n              </Radio.Group>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Checkbox.Group\">\n            {getFieldDecorator('checkbox-group', {\n              initialValue: ['A', 'B'],\n            })(\n              <Checkbox.Group style={{ width: '100%' }}>\n                <Row>\n                  <Col span={8}>\n                    <Checkbox value=\"A\">A</Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox disabled value=\"B\">\n                      B\n                    </Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox value=\"C\">C</Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox value=\"D\">D</Checkbox>\n                  </Col>\n                  <Col span={8}>\n                    <Checkbox value=\"E\">E</Checkbox>\n                  </Col>\n                </Row>\n              </Checkbox.Group>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Rate\">\n            {getFieldDecorator('rate', {\n              initialValue: 3.5,\n            })(<Rate />)}\n          </Form.Item>\n\n          <Form.Item\n            label=\"Upload\"\n            extra=\"longgggggggggggggggggggggggggggggggggg\"\n          >\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                <Button>\n                  <Icon type=\"upload\" /> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Dragger\">\n            <div className={style.dropbox}>\n              {getFieldDecorator('dragger', {\n                valuePropName: 'fileList',\n                getValueFromEvent: this.normFile,\n              })(\n                <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" />\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    Click or drag file to this area to upload\n                  </p>\n                  <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload.\n                  </p>\n                </Upload.Dragger>\n              )}\n            </div>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst Create2 = Form.create({ name: 'validate_other' })(Create);\nexport default Create2;\n","import { Button, InputNumber, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MOCK_ITEMS } from '../../mocks';\r\nimport { Item } from '../../types';\r\nimport { Attributes } from '../Card/Attributes';\r\nimport style from './Details.module.css';\r\n\r\ntype Props = {\r\n  uuid: string;\r\n};\r\nexport const Details: React.FC<Props> = ({ uuid }) => {\r\n  const [item, setItem] = useState<Item | undefined>(undefined);\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n  useEffect(() => {\r\n    setItem(MOCK_ITEMS.find((item) => item.uuid === uuid) || MOCK_ITEMS[0]);\r\n  }, [uuid]);\r\n  useEffect(() => {\r\n    if (item === undefined) return;\r\n    setBidAmount(item.price);\r\n  }, [item]);\r\n\r\n  if (item === undefined) return <>Not found</>;\r\n  return (\r\n    <div className={style.details}>\r\n      <Typography.Title level={1}>{item.name}</Typography.Title>\r\n      <img src={item.image} alt={item.name} />\r\n      <Attributes item={item} />\r\n      <p>{item.description}</p>\r\n      <InputNumber\r\n        value={bidAmount}\r\n        min={0}\r\n        formatter={(value) => (value ? (+value / 100).toFixed(2) : '')}\r\n        parser={(value) => (value ? parseFloat(value) * 100 : 0)}\r\n        onChange={(value) => value && setBidAmount(value)}\r\n      />{' '}\r\n      <Button type=\"primary\">Bid</Button>\r\n    </div>\r\n  );\r\n};\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { navigate } from 'hookrouter';\r\nimport React, { useState } from 'react';\r\nimport { IPublicState } from '../../utils/keeper';\r\n\r\nexport type HeaderProps = {\r\n  state: IPublicState;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ state }) => {\r\n  const [key, setKey] = useState('/');\r\n  const handleClick = (param: ClickParam) => {\r\n    setKey(param.key);\r\n    navigate(key);\r\n  };\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        selectedKeys={[key]}\r\n        style={{ lineHeight: '64px' }}\r\n        onClick={handleClick}\r\n      >\r\n        <Menu.Item key=\"/\">WAVES BIDS</Menu.Item>\r\n        <Menu.SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n              {(state && state.account && state.account.address) ||\r\n                'NOT AUTHORIZED'}\r\n            </span>\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <Menu.ItemGroup title=\"Item 1\">\r\n            <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n            <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup title=\"Item 2\">\r\n            <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport React from 'react';\nimport Header, { HeaderProps } from '../Header/Header';\n\ntype PageProps = HeaderProps;\n\nconst Page: React.FC<PageProps> = ({ children, state }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header state={state} />\n      <Layout.Content>{children}</Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default Page;\n","// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr_organizer.*\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL_.*\r\n\r\ntype ResponseItem = {\r\n  type: string;\r\n  value: string;\r\n  key: string;\r\n};\r\n\r\nexport type AuctionDetails = {\r\n  closing_start?: string;\r\n  deposit?: string;\r\n  lot_amount?: string;\r\n  lot_assetId?: string;\r\n  organizer?: string;\r\n  priceAssetId?: string;\r\n  reveal_start?: string;\r\n  second_price?: string;\r\n  settle?: string;\r\n  startPrice?: string;\r\n  top_price?: string;\r\n  unrevealed_count?: string;\r\n};\r\n\r\nfunction fetchWrapper(url: string): Promise<ResponseItem[]> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nexport function getUrl(matches: string): string {\r\n  const ENDPOINT = `https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=`;\r\n  return ENDPOINT + matches;\r\n}\r\n\r\nexport async function getAuctionIds(organizer: string): Promise<string[]> {\r\n  const res = await fetchWrapper(getUrl(organizer + '_organizer.*'));\r\n  const auctionIds = res[0].value.trim().split(' ');\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getAuctionDetails(auctionId: string) {\r\n  const res = await fetchWrapper(getUrl(auctionId + '_.*'));\r\n  let auctionDetails: AuctionDetails = {};\r\n  for (let i = 0; i < res.length; i++) {\r\n    const key = res[i].key.substr(res[i].key.indexOf('_') + 1);\r\n    const val = res[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n  return auctionDetails;\r\n}\r\n\r\nexport async function getAuctions(organizer: string) {\r\n  const auctionIds = await getAuctionIds(organizer);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n","import { Spin } from 'antd';\nimport { HookRouter, useRoutes } from 'hookrouter';\nimport React, { useEffect, useState } from 'react';\nimport { MOCK_ITEMS } from '../../mocks';\nimport { IPublicState } from '../../utils/keeper';\nimport { tmpKeeperInit } from '../../utils/tmpSimpleKeeper';\nimport { Cards } from '../Cards/Cards';\nimport Create2 from '../Create/Create';\nimport { Details } from '../Details/Details';\nimport Page from '../Page/Page';\nimport { getAuctions, AuctionDetails } from '../../utils/api';\n\nexport const App = () => {\n  const [state, setState] = useState<IPublicState>();\n  const [auctions, setAuctions] = useState<AuctionDetails[]>();\n  useEffect(() => {\n    // @FIXME\n    tmpKeeperInit().then((state) => {\n      setState(state);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (state === undefined) return;\n    // const organizer = state.account!.address;\n    const organizer = '3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr';\n    getAuctions(organizer).then((auctions) => {\n      setAuctions(auctions);\n    });\n  }, [state]);\n\n  const routes: HookRouter.RouteObject = {\n    '/': () => <Cards items={MOCK_ITEMS} />,\n    '/create': () => <Create2 />,\n    '/bid/:id': ({ id }) => <Details uuid={id} />,\n  };\n\n  const routeResult = useRoutes(routes);\n\n  if (state === undefined) return <Spin />;\n\n  return <Page state={state}>{routeResult || '404. Page not found'}</Page>;\n};\n\nexport default App;\n","/** This is temporary solution! I need to use KeeperHelper class instead */\r\n\r\nimport { IWavesKeeperOptions } from './keeper';\r\n\r\ndeclare const WavesKeeper: { initialPromise: Promise<IWavesKeeperOptions> };\r\n\r\nexport function tmpKeeperInit() {\r\n  return WavesKeeper.initialPromise.then((keeperApi: IWavesKeeperOptions) => {\r\n    /*...init app*/\r\n    return keeperApi.publicState().then((state) => {\r\n      console.log({ state });\r\n      return state;\r\n    });\r\n  });\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__MDAf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropbox\":\"Create_dropbox__2hTAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"Details_details__iL31I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3IQwD\",\"add\":\"Card_add__1273X\",\"attributes\":\"Card_attributes__97-Ud\"};"],"sourceRoot":""}