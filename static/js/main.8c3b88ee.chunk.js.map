{"version":3,"sources":["components/Cards/Cards.module.css","components/Section/Section.module.css","components/Card/Card.module.css","utils/api.ts","utils/tmpSimpleKeeper.ts","components/Section/Section.tsx","components/Bids/Bids.tsx","utils/getImage.ts","components/Card/Card.tsx","components/Card/CardAdd.tsx","components/Cards/CardsAuctions.tsx","components/Card/CardLot.tsx","components/Cards/CardsLots.tsx","components/Create/CreateAuction.tsx","components/Create/CreateLot.tsx","components/DetailsTable/DetailsTable.tsx","components/Details/AuctionDetails.tsx","components/Details/LotDetails.tsx","components/Header/Header.tsx","components/Page/Page.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","WAVES","fetchWrapper","url","fetch","then","response","json","generalFetchWrapper","CONTRACT_ADDRESS","BASE_URL","getUrl","getDataUrl","matches","getAuctionIds","a","organizer","res","auctionIds","i","length","push","value","trim","split","getBidderAuctionIds","bidder","getAuctionDetails","auctionId","auctionDetails","id","key","substr","indexOf","val","promises","map","Promise","all","auctions","getAuctionsAsBidder","auction","hash","deposit","createLot","lot","sign","tx","type","data","name","description","imageUrl","quantity","precision","reissuable","fee","tokens","assetId","JSON","parse","getLots","accountId","startAuction","startPrice","Error","dApp","call","function","args","duration","priceAssetId","payment","withKeeper","cb","WavesKeeper","initialPromise","api","Section","children","className","style","section","columns","title","dataIndex","render","Bids","useState","bids","setBids","useEffect","publicState","ps","address","account","getBidsAsBidder","result","Title","level","dataSource","pagination","rowKey","getImage","item","reduce","prev","curr","charCodeAt","Card","card","onClick","navigate","src","alt","attributes","moment","to","unrevealed_count","CardAdd","props","add","CardsAuctions","cards","CardLot","Text","CardsLots","lots","setLots","Option","Select","CreateAuctionPL","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","signAndPublishTransaction","lotTx","info","normFile","Array","isArray","fileList","state","that","this","setState","getFieldDecorator","labelCol","span","wrapperCol","onSubmit","Item","label","hasFeedback","step","offset","htmlType","React","Component","Form","create","CreateLotPL","upload","valuePropName","getValueFromEvent","action","listType","accept","DetailsTable","lot_amount","lot_assetId","second_price","top_price","Settle","settle","Object","entries","showHeader","AuctionDetails","bidAmount","setBidAmount","undefined","min","formatter","toFixed","parser","parseFloat","onChange","LotDetails","setLot","find","Header","amount","path","usePath","float","color","marginRight","theme","mode","selectedKeys","lineHeight","param","SubMenu","ItemGroup","disabled","balance","available","parseInt","toString","network","Page","Content","Footer","App","useRedirect","setAuctions","resolve","reject","window","onload","keeperApi","catch","error","notification","message","getAuctions","routes","CreateLot","CreateAuction","routeResult","useRoutes","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8c3b88ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__314Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"add\":\"Card_add__1pgKF\",\"title\":\"Card_title__2pVhP\",\"attributes\":\"Card_attributes__16E1C\"};","import { sha256, base64Encode, stringToBytes } from '@waves/ts-lib-crypto';\r\n\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr_organizer.*\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL_.*\r\n\r\nconst WAVES = 10 ** 8;\r\n\r\ntype ResponseItem = {\r\n  type: string;\r\n  value: string;\r\n  key: string;\r\n};\r\n\r\nexport type IAuctionDetails = {\r\n  id: string;\r\n\r\n  lot_amount?: number;\r\n\r\n  /** base58 адрес устроителя аукциона */\r\n  organizer?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  lot_assetId?: string;\r\n  // lot_asset_id?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  priceAssetId?: string;\r\n  // price_asset_id?: string;\r\n  /** начальная (минимальная) цена лота */\r\n  startPrice?: number;\r\n  // start_price?: string;\r\n  /** наивысшая раскрытая цена */\r\n  top_price?: number;\r\n  /** вторая раскрытая цена */\r\n  second_price?: number;\r\n  /** base58 адрес победителя аукциона */\r\n  winner?: string;\r\n  /** номер блока (выста) с которой начинается фаза раскрытия */\r\n  reveal_start?: number;\r\n  /** номер блока (выста) с которой начинается фаза окончения */\r\n  closing_start?: number;\r\n  /** размер депозита (максимальной ставки) для участия в аукционе */\r\n  deposit?: number;\r\n  /** количество не раскрывшихся участников */\r\n  unrevealed_count?: number;\r\n  /** признак что аукцион завершился (деньги перечислены организатору, а лот участнику) */\r\n  settle?: boolean;\r\n};\r\n\r\nexport type ILot = {\r\n  name: string; // Token name\r\n  imageUrl: string; // URL Preview на аукцион\r\n};\r\n\r\nexport type ILotDetails = ILot & { id: string };\r\n\r\nexport type Auction = {\r\n  assetId: string;\r\n  duration: number;\r\n  startPrice: number;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type Bid = {\r\n  auctionId: string;\r\n  hash: string;\r\n  /** валюта аукциона (base58 адрес токена валюты или строка 'WAVES') */\r\n  priceAssetId?: string;\r\n  /** размер депозита участника (максимальная цена) по аукциону */\r\n  deposit: number;\r\n};\r\n\r\nexport type IBidDetails = Bid & IAuctionDetails;\r\n\r\nexport type HashedBid = {\r\n  amount: number;\r\n  salt: string;\r\n  hashedAmount: string;\r\n};\r\n\r\nexport type Reveal = {\r\n  auctionId: string;\r\n  salt: string;\r\n  amount: number;\r\n};\r\n\r\nexport type TxResponse = {\r\n  id: string;\r\n  sender: string;\r\n  senderPublicKey: string;\r\n  timestamp: number;\r\n};\r\n\r\nexport type Error = {\r\n  error: string;\r\n  message: string;\r\n};\r\n\r\nexport type NFT = {\r\n  description: string;\r\n  id: string;\r\n  name: string;\r\n};\r\n\r\nexport type SignatureCallback = (txData: any) => Promise<any>;\r\n\r\nfunction fetchWrapper(url: string): Promise<ResponseItem[]> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nfunction generalFetchWrapper(url: string): Promise<any> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nconst CONTRACT_ADDRESS = '3N4vYCshKfrNXYTmg4Z7af2wKprhDsLBqP2';\r\n\r\nconst BASE_URL = 'https://nodes-testnet.wavesnodes.com';\r\n\r\nexport function toShortTokenAmount(amount: string | number) {\r\n  return (parseInt('' + amount) / WAVES).toString();\r\n}\r\nexport function getUrl(url: string): string {\r\n  return `${BASE_URL}/${url}`;\r\n}\r\n\r\nexport function getDataUrl(matches: string): string {\r\n  return getUrl(`addresses/data/${CONTRACT_ADDRESS}?matches=${matches}`);\r\n}\r\n\r\nexport async function getAuctionIds(organizer = '.*'): Promise<string[]> {\r\n  const res = await fetchWrapper(getDataUrl(organizer + '_organizer'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(...res[i].value.trim().split(' '));\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getBidderAuctionIds(bidder: string): Promise<string[]> {\r\n  const res = await fetchWrapper(getDataUrl(bidder + '_bidder'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(...res[i].value.trim().split(' '));\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getAuctionDetails(auctionId: string) {\r\n  const res = await fetchWrapper(getDataUrl(auctionId + '_.*'));\r\n  let auctionDetails: IAuctionDetails = {\r\n    id: res[0].key.split('_')[0],\r\n  };\r\n  for (let i = 0; i < res.length; i++) {\r\n    const key = res[i].key.substr(res[i].key.indexOf('_') + 1);\r\n    const val = res[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n  return auctionDetails;\r\n}\r\n\r\nexport async function getAuctions(): Promise<IAuctionDetails[]> {\r\n  const auctionIds = await getAuctionIds();\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function getAuctionsAsBidder(\r\n  bidder: string\r\n): Promise<IAuctionDetails[]> {\r\n  const auctionIds = await getBidderAuctionIds(bidder);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function getBidsAsBidder(bidder: string): Promise<Bid[]> {\r\n  return getAuctionsAsBidder(bidder).then((auctions) =>\r\n    auctions.map((auction) => {\r\n      return {\r\n        auctionId: auction.id,\r\n        hash: auction[auction.id + bidder + '_bid_hash'],\r\n        deposit: auction.deposit || 0,\r\n      };\r\n    })\r\n  );\r\n}\r\n\r\nexport async function getAuctionsAsOrganizer(\r\n  organizer?: string\r\n): Promise<IAuctionDetails[]> {\r\n  const auctionIds = await getAuctionIds(organizer);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function createLot(\r\n  lot: ILot,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 3,\r\n    data: {\r\n      name: lot.name,\r\n      description: lot.imageUrl,\r\n      quantity: 1,\r\n      precision: 0,\r\n      reissuable: false,\r\n      fee: {\r\n        tokens: '0.001',\r\n        assetId: 'WAVES',\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function getLots(accountId: string): Promise<Array<NFT>> {\r\n  const url = getUrl(`assets/nft/${accountId}/limit/100`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function startAuction(\r\n  auction: Auction,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  if (auction.startPrice >= auction.deposit) {\r\n    throw new Error('start price should be >= deposit');\r\n  }\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: '0.005',\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'startAuction',\r\n        args: [\r\n          {\r\n            type: 'integer',\r\n            value: auction.duration,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.startPrice * WAVES,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: auction.priceAssetId || 'WAVES',\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.deposit * WAVES,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: 1,\r\n          assetId: auction.assetId,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\n// Performs the following computation from smart contract in Typescript:\r\n// base64(hash(SALT + bidAmount.toString()))\r\n//\r\nexport function toHash(amount: number): HashedBid {\r\n  const bidStr = (amount * WAVES).toString();\r\n  const salt = randomStr();\r\n  const strToHash = salt + bidStr;\r\n  const bytesToHash = stringToBytes(strToHash);\r\n  const hashBytes = sha256(bytesToHash);\r\n  const hashedAmount = base64Encode(hashBytes);\r\n  return {\r\n    amount,\r\n    salt,\r\n    hashedAmount,\r\n  };\r\n}\r\n\r\nexport async function bid(\r\n  bid: Bid,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005,\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'bid',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: bid.auctionId,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: bid.hash,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: bid.deposit,\r\n          assetId: bid.priceAssetId || 'WAVES',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function reveal(\r\n  reveal: Reveal,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005,\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'reveal',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: reveal.auctionId,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: reveal.amount,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: reveal.salt,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function withdraw(\r\n  auctionId: string,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005,\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'withdraw',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: auctionId,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function getTxInfo(txid: string): Promise<Error | TxResponse> {\r\n  const url = getUrl(`transactions/info/${txid}`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function awaitTx(txid: string): Promise<TxResponse> {\r\n  return new Promise(function(resolve) {\r\n    (async function wait() {\r\n      const info = await getTxInfo(txid);\r\n      if (!(info as Error).error) return resolve(info as TxResponse);\r\n      setTimeout(wait, 300);\r\n    })();\r\n  });\r\n}\r\n\r\nexport function randomStr() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n","/** This is temporary solution! I need to use KeeperHelper class instead */\r\n\r\nimport { IWavesKeeperOptions, IPublicState } from './keeper';\r\n\r\ndeclare const WavesKeeper: { initialPromise: Promise<IWavesKeeperOptions> };\r\n\r\nexport function tmpKeeperInit(): Promise<IPublicState> {\r\n  return new Promise((resolve, reject) => {\r\n    window.onload = function() {\r\n      if (typeof WavesKeeper === 'undefined') {\r\n        return reject('Keeper is not installed!');\r\n      }\r\n\r\n      WavesKeeper.initialPromise.then((keeperApi: IWavesKeeperOptions) => {\r\n        keeperApi.publicState().then((state) => {\r\n          console.log({ state });\r\n          resolve(state);\r\n        });\r\n      });\r\n    };\r\n  });\r\n}\r\n\r\nexport const withKeeper = (cb: (options: IWavesKeeperOptions) => any) => {\r\n  WavesKeeper.initialPromise.then((api) => {\r\n    cb(api);\r\n  });\r\n};\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\n\r\nexport const Section: React.FC = ({ children }) => {\r\n  return <div className={style.section}>{children}</div>;\r\n};\r\n","import { Table, Typography, Button } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Bid, getBidsAsBidder } from '../../utils/api';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { Section } from '../Section/Section';\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'Auction ID', dataIndex: '' },\r\n  { title: 'Start price', dataIndex: 'startPrice' },\r\n  { title: 'Deposit', dataIndex: 'deposit' },\r\n  { title: 'My bid', dataIndex: 'myBid' },\r\n  { title: 'Status', dataIndex: 'Status' },\r\n  {\r\n    title: 'Actions',\r\n    render: () => (\r\n      <>\r\n        <Button>UP</Button>\r\n      </>\r\n    ),\r\n  },\r\n];\r\n\r\ntype Props = {};\r\nexport const Bids: React.FC<Props> = () => {\r\n  const [bids, setBids] = useState<Bid[]>([]);\r\n\r\n  useEffect(() => {\r\n    withKeeper((api) => {\r\n      api.publicState().then((ps) => {\r\n        const address = ps.account && ps.account.address;\r\n\r\n        if (address) {\r\n          getBidsAsBidder(address).then((result) => {\r\n            setBids(result);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>My bids</Typography.Title>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={bids}\r\n        pagination={false}\r\n        rowKey=\"auctionId\"\r\n      ></Table>\r\n    </Section>\r\n  );\r\n};\r\n","import { Item } from '../types';\r\n\r\nexport function getImage(item: Item): string {\r\n  const n =\r\n    item.id.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0) % 15;\r\n\r\n  return `https://placekitten.com/800/400?image=` + n;\r\n}\r\n","import { Icon, Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport { getImage } from '../../utils/getImage';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardProps = {\r\n  item: Item;\r\n};\r\nexport const Card: React.FC<CardProps> = ({ item }) => {\r\n  const handleClick = () => navigate(`/waves/auction/${item.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={getImage(item)} alt={''} />\r\n      <Typography.Title className={style.title} level={4}>\r\n        {item.id}\r\n      </Typography.Title>\r\n      <div className={style.attributes}>\r\n        <div>\r\n          <Icon type=\"user\" /> {item.organizer}\r\n        </div>\r\n        <div>\r\n          <Icon type=\"clock-circle\" /> Ends {moment().to(0)}\r\n        </div>\r\n        <div>\r\n          <Icon type=\"money-collect\" /> {item.startPrice} Waves\r\n        </div>\r\n        <div>\r\n          <Icon type=\"number\" /> {item.unrevealed_count} bids\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from 'antd';\r\nimport React from 'react';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  title: string;\r\n};\r\nexport const CardAdd: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${style.card} ${style.add}`} {...props}>\r\n      <Icon type=\"plus\" />\r\n    </div>\r\n  );\r\n};\r\n","import { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IAuctionDetails } from '../../utils/api';\r\nimport { Card } from '../Card/Card';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsProps = { auctions: IAuctionDetails[] };\r\n\r\nexport const CardsAuctions: React.FC<CardsProps> = ({ auctions }) => {\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd\r\n        onClick={() => navigate('/waves/create/lot')}\r\n        title=\"Create a new lot\"\r\n      />\r\n      {auctions.map((item) => (\r\n        <Card key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardLotProps = {\r\n  lot: ILotDetails;\r\n};\r\nexport const CardLot: React.FC<CardLotProps> = ({ lot }) => {\r\n  const handleClick = () => navigate(`/waves/lot/${lot.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={lot.imageUrl} alt={''} />\r\n\r\n      <Typography.Text>{lot.id.substr(20, lot.id.length)}</Typography.Text>\r\n      <Typography.Title className={style.title} level={4}>\r\n        {lot.name}\r\n      </Typography.Title>\r\n    </div>\r\n  );\r\n};\r\n","import { navigate } from 'hookrouter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NFT, getLots } from '../../utils/api';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport { CardLot } from '../Card/CardLot';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsLotsProps = {};\r\n\r\nexport const CardsLots: React.FC<CardsLotsProps> = () => {\r\n  const [lots, setLots] = useState<NFT[]>([]);\r\n\r\n  useEffect(() => {\r\n    withKeeper((api) => {\r\n      api.publicState().then((ps) => {\r\n        const address = ps.account && ps.account.address;\r\n\r\n        if (address) {\r\n          getLots(address).then((result) => {\r\n            setLots(result);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd\r\n        onClick={() => navigate('/waves/create/lot')}\r\n        title=\"Create a new lot\"\r\n      />\r\n      {lots.map((lot) => (\r\n        <CardLot\r\n          key={lot.id}\r\n          lot={{\r\n            name: lot.name,\r\n            imageUrl: lot.description,\r\n            id: lot.id,\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Form, InputNumber, Select, Typography } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { navigate } from 'hookrouter';\nimport React from 'react';\nimport { startAuction, getLots, NFT } from '../../utils/api';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nconst { Option } = Select;\n\ninterface State {\n  lots?: Array<NFT>;\n}\n\nclass CreateAuctionPL extends React.Component<FormComponentProps, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = { lots: [] };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api) => {\n          const lotTx = await startAuction(\n            {\n              assetId: values['select-lot'],\n              duration: values['duration'],\n              startPrice: values['input-number-start-price'],\n              priceAssetId: 'WAVES',\n              deposit: values['input-number-deposit'],\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  componentDidMount() {\n    const that = this;\n    withKeeper((api) => {\n      api.publicState().then((ps) => {\n        const address = ps.account && ps.account.address;\n\n        if (address) {\n          getLots(address).then((result) => {\n            that.setState({\n              lots: result,\n            });\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { lots } = this.state;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating an auction</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot\" hasFeedback>\n            {getFieldDecorator('select-lot', {})(\n              <Select>\n                {lots &&\n                  lots.map((lot) => (\n                    <Option value={lot.id} key={lot.id}>\n                      {lot.name}\n                    </Option>\n                  ))}\n              </Select>\n            )}\n            <Button onClick={() => navigate('/waves/create/lot')}>\n              Create Lot\n            </Button>\n          </Form.Item>\n\n          <Form.Item label=\"Duration\">\n            {getFieldDecorator('duration', {})(<InputNumber step={1} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Start price\">\n            {getFieldDecorator('input-number-start-price', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Deposit\">\n            {getFieldDecorator('input-number-deposit', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save auction\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateAuctionPL);\n","import { Button, Form, Icon, Input, Typography, Upload } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport React from 'react';\nimport { createLot } from '../../utils/api';\nimport { IWavesKeeperOptions } from '../../utils/keeper';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nclass CreateLotPL extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api: IWavesKeeperOptions) => {\n          const lotTx = await createLot(\n            {\n              name: values['input-name'],\n              imageUrl: values.upload[0].response.url,\n              // 'https://images-na.ssl-images-amazon.com/images/I/813XSSh%2BUTL._SY679_.jpg',\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating a Lot</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot name\">\n            {getFieldDecorator('input-name', {})(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Image for lot\">\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload\n                name=\"image\"\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                listType=\"picture\"\n                accept=\"image/*\"\n              >\n                <Button>\n                  <Icon type=\"upload\" /> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save Lot\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateLotPL);\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Table } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nexport type DetailsTableProps = {\r\n  item: Item;\r\n};\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'key', dataIndex: 'key' },\r\n  { title: 'value', dataIndex: 'value' },\r\n];\r\n\r\nexport const DetailsTable: React.FC<DetailsTableProps> = ({ item }) => {\r\n  const map = {\r\n    'Auction id ': item.id,\r\n    'Max bid ': item.deposit,\r\n    'Amount ': item.lot_amount,\r\n    'Lot id ': item.lot_assetId,\r\n    'Organizer address ': item.organizer,\r\n    'Currency ': item.priceAssetId,\r\n    'Start bid ': item.startPrice,\r\n    'Time left for bids ': '@TODO',\r\n    'Second price': item.second_price\r\n      ? item.second_price\r\n      : 'Will be known after time left for bids complete',\r\n    'Top price ': item.top_price\r\n      ? item.top_price\r\n      : 'Will be known after time left for bids completed',\r\n    'Unrevealed count': item.unrevealed_count\r\n      ? item.unrevealed_count\r\n      : 'Will be known after time left for bids completed',\r\n    'Time left for reveal bids': '@TODO closing_start - today',\r\n    Settle: item.settle\r\n      ? 'Winner took the prize'\r\n      : 'The prize is held by the organizer',\r\n  };\r\n  const data = Object.entries(map).map(([key, value]) => ({ key, value }));\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      pagination={false}\r\n      showHeader={false}\r\n    ></Table>\r\n  );\r\n};\r\n","import { Button, InputNumber, Typography } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { IAuctionDetails } from '../../utils/api';\r\nimport { getImage } from '../../utils/getImage';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { DetailsTable } from '../DetailsTable/DetailsTable';\r\nimport { Section } from '../Section/Section';\r\n\r\ntype Props = {\r\n  auction?: IAuctionDetails;\r\n  state?: IPublicState;\r\n};\r\nexport const AuctionDetails: React.FC<Props> = ({ auction, state }) => {\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n\r\n  if (auction === undefined) return <>Auction not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{auction.id}</Typography.Title>\r\n      <img src={getImage(auction)} alt={''} />\r\n      <DetailsTable item={auction} />\r\n      <br />\r\n      <br />\r\n\r\n      {state!.account!.address === auction.organizer ? (\r\n        <>\r\n          <Button type=\"primary\">SETTLE</Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <InputNumber\r\n            value={bidAmount}\r\n            min={0}\r\n            formatter={(value) => (value ? (+value / 100).toFixed(2) : '')}\r\n            parser={(value) => (value ? parseFloat(value) * 100 : 0)}\r\n            onChange={(value) => value && setBidAmount(value)}\r\n          />{' '}\r\n          <Button type=\"primary\">Bid</Button>\r\n        </>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n","import { Typography, Button } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { getLots } from '../../utils/api';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport { Section } from '../Section/Section';\r\nimport { navigate } from 'hookrouter';\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\nexport const LotDetails: React.FC<Props> = ({ id }) => {\r\n  const [lot, setLot] = useState<ILotDetails>();\r\n\r\n  useEffect(() => {\r\n    withKeeper((api) => {\r\n      api.publicState().then((ps) => {\r\n        const address = ps.account && ps.account.address;\r\n\r\n        if (address) {\r\n          getLots(address).then((result) => {\r\n            setLot(\r\n              result\r\n                .map((lot) => {\r\n                  return {\r\n                    id: lot.id,\r\n                    name: lot.name,\r\n                    imageUrl: lot.description,\r\n                  };\r\n                })\r\n                .find((lot) => lot.id === id)\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, [id]);\r\n\r\n  if (lot === undefined) return <>Lot not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{lot.name}</Typography.Title>\r\n      <img src={lot.imageUrl} alt={''} />\r\n      <br />\r\n      <br />\r\n      <Button onClick={() => navigate('/waves/create/auction')} type=\"primary\">\r\n        Send to auction\r\n      </Button>\r\n    </Section>\r\n  );\r\n};\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { navigate, usePath } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { toShortTokenAmount } from '../../utils/api';\r\n\r\nexport type HeaderProps = {\r\n  state?: IPublicState;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ state }) => {\r\n  const path = usePath();\r\n  const handleClick = (param: ClickParam) => {\r\n    navigate(param.key);\r\n  };\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <div style={{ float: 'left', color: 'white', marginRight: 20 }}>\r\n        WAVES BIDS\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        selectedKeys={[path]}\r\n        style={{ lineHeight: '64px' }}\r\n        onClick={handleClick}\r\n      >\r\n        <Menu.Item key=\"/waves/\">All auctions</Menu.Item>\r\n        <Menu.SubMenu title=\"Create\">\r\n          <Menu.Item key=\"/waves/create/lot\">Create lot</Menu.Item>\r\n          <Menu.Item key=\"/waves/create/auction\">Create auction</Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n              {(state && state.account && state.account.name) ||\r\n                'NOT AUTHORIZED'}\r\n            </span>\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <Menu.Item key=\"/waves/auctions\">My auctions</Menu.Item>\r\n          <Menu.Item key=\"/waves/bids\">My bids</Menu.Item>\r\n          <Menu.Item key=\"/waves/lots\">My lots</Menu.Item>\r\n\r\n          <Menu.ItemGroup title=\"Info\">\r\n            <Menu.Item disabled key=\"adress\">\r\n              {state && state.account && state.account.address}\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"balance-available\">\r\n              Balance:{' '}\r\n              {state &&\r\n                state.account &&\r\n                toShortTokenAmount(state.account.balance.available)}{' '}\r\n              WAVES\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"network\">\r\n              Network: {state && state.account && state.account.network}\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport React from 'react';\nimport Header, { HeaderProps } from '../Header/Header';\n\ntype PageProps = HeaderProps;\n\nconst Page: React.FC<PageProps> = ({ children, state }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header state={state} />\n      <Layout.Content>{children}</Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default Page;\n","import { notification } from 'antd';\nimport { HookRouter, useRedirect, useRoutes } from 'hookrouter';\nimport React, { useEffect, useState } from 'react';\nimport { getAuctions, IAuctionDetails } from '../../utils/api';\nimport { IPublicState } from '../../utils/keeper';\nimport { tmpKeeperInit } from '../../utils/tmpSimpleKeeper';\nimport { Bids } from '../Bids/Bids';\nimport { CardsAuctions } from '../Cards/CardsAuctions';\nimport { CardsLots } from '../Cards/CardsLots';\nimport CreateAuction from '../Create/CreateAuction';\nimport CreateLot from '../Create/CreateLot';\nimport { AuctionDetails } from '../Details/AuctionDetails';\nimport { LotDetails } from '../Details/LotDetails';\nimport Page from '../Page/Page';\n\nexport const App = () => {\n  useRedirect('/', '/waves/');\n  const [state, setState] = useState<IPublicState>();\n  const [auctions, setAuctions] = useState<IAuctionDetails[]>();\n  useEffect(() => {\n    // @FIXME\n    tmpKeeperInit()\n      .then((state) => {\n        setState(state);\n      })\n      .catch((error) => {\n        notification.error({\n          message: error,\n          description:\n            'You need to install and configure Waves Keeper chrome extension in order to use this site!',\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!state) return;\n    if (!state.account) {\n      throw new Error('There is no `account` field in `state` object');\n    }\n    getAuctions().then((auctions) => {\n      setAuctions(auctions);\n    });\n  }, [state]);\n\n  const routes: HookRouter.RouteObject = {\n    '/waves/': () => <CardsAuctions auctions={auctions || []} />,\n    '/waves/auctions': () => <CardsAuctions auctions={auctions || []} />,\n    '/waves/lots': () => <CardsLots />,\n    '/waves/bids': () => <Bids />,\n    '/waves/create/lot': () => <CreateLot />,\n    '/waves/create/auction': () => <CreateAuction />,\n    '/waves/auction/:id': ({ id }) =>\n      auctions && (\n        <AuctionDetails\n          state={state}\n          auction={auctions.find((a) => a.id === id)}\n        />\n      ),\n    '/waves/lot/:id': ({ id }) => <LotDetails id={id} />,\n  };\n\n  const routeResult = useRoutes(routes);\n\n  return <Page state={state}>{routeResult || '404. Page not found'}</Page>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}