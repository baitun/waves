{"version":3,"sources":["components/Cards/Cards.module.css","components/Section/Section.module.css","utils/api.ts","components/Card/Attributes.tsx","utils/getImage.ts","components/Card/Card.tsx","components/Card/CardAdd.tsx","components/Cards/Cards.tsx","components/Section/Section.tsx","components/Create/Create.tsx","components/DetailsTable/DetailsTable.tsx","components/Details/Details.tsx","components/Header/Header.tsx","components/Page/Page.tsx","components/App/App.tsx","utils/tmpSimpleKeeper.ts","index.tsx","components/Card/Card.module.css"],"names":["module","exports","fetchWrapper","url","fetch","then","response","json","CONTRACT_ADDRESS","getUrl","matches","getAuctionIds","a","organizer","res","auctionIds","i","length","push","value","trim","split","getAuctionDetails","auctionId","auctionDetails","id","key","substr","indexOf","val","promises","map","Promise","all","auctions","Attributes","item","className","style","attributes","type","moment","to","startPrice","unrevealed_count","getImage","reduce","prev","curr","charCodeAt","Card","card","onClick","navigate","src","alt","Title","title","level","CardAdd","add","Cards","items","cards","Section","children","section","Option","Select","Create","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","getFieldDecorator","this","labelCol","span","wrapperCol","onSubmit","Item","label","hasFeedback","placeholder","step","valuePropName","getValueFromEvent","name","action","listType","offset","htmlType","React","Component","Form","create","columns","dataIndex","DetailsTable","deposit","lot_amount","lot_assetId","priceAssetId","second_price","top_price","Settle","settle","data","Object","entries","dataSource","pagination","showHeader","Details","useState","undefined","setItem","bidAmount","setBidAmount","useEffect","find","min","formatter","toFixed","parser","parseFloat","onChange","Header","state","path","usePath","float","color","marginRight","theme","mode","selectedKeys","lineHeight","param","SubMenu","account","disabled","address","ItemGroup","balance","available","network","Page","Content","Footer","App","useRedirect","setState","setAuctions","resolve","reject","window","onload","WavesKeeper","initialPromise","keeperApi","publicState","catch","error","notification","message","description","getAuctions","routes","routeResult","useRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e8f112a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__314Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","import { sha256, base64Encode, stringToBytes } from '@waves/ts-lib-crypto';\r\n\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr_organizer.*\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL_.*\r\n\r\nconst WAVES = 10 ** 8;\r\n\r\ntype ResponseItem = {\r\n  type: string;\r\n  value: string;\r\n  key: string;\r\n};\r\n\r\nexport type AuctionDetails = {\r\n  id: string;\r\n\r\n  lot_amount?: string;\r\n\r\n  /** base58 адрес устроителя аукциона */\r\n  organizer?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  lot_assetId?: string;\r\n  // lot_asset_id?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  priceAssetId?: string;\r\n  // price_asset_id?: string;\r\n  /** начальная (минимальная) цена лота */\r\n  startPrice?: string;\r\n  // start_price?: string;\r\n  /** наивысшая раскрытая цена */\r\n  top_price?: string;\r\n  /** вторая раскрытая цена */\r\n  second_price?: string;\r\n  /** base58 адрес победителя аукциона */\r\n  winner?: string;\r\n  /** номер блока (выста) с которой начинается фаза раскрытия */\r\n  reveal_start?: string;\r\n  /** номер блока (выста) с которой начинается фаза окончения */\r\n  closing_start?: string;\r\n  /** размер депозита (максимальной ставки) для участия в аукционе */\r\n  deposit?: string;\r\n  /** количество не раскрывшихся участников */\r\n  unrevealed_count?: string;\r\n  /** признак что аукцион завершился (деньги перечислены организатору, а лот участнику) */\r\n  settle?: boolean;\r\n};\r\n\r\nexport type Lot = {\r\n  name: string; // Token name\r\n  imageUrl: string; // URL Preview на аукцион\r\n};\r\n\r\nexport type Auction = {\r\n  assetId: string;\r\n  duration: number;\r\n  startPrice: number;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type Bid = {\r\n  auctionId: string;\r\n  hash: string;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type HashedBid = {\r\n  amount: number;\r\n  salt: string;\r\n  hashedAmount: string;\r\n};\r\n\r\nexport type SignatureCallback = (txData: any) => Promise<any>;\r\n\r\nfunction fetchWrapper(url: string): Promise<ResponseItem[]> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nconst CONTRACT_ADDRESS = '3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd';\r\n\r\nexport function getUrl(matches: string): string {\r\n  const ENDPOINT = `https://nodes-testnet.wavesnodes.com/addresses/data/${CONTRACT_ADDRESS}?matches=`;\r\n  return ENDPOINT + matches;\r\n}\r\n\r\nexport async function getAuctionIds(organizer = '.*'): Promise<string[]> {\r\n  const res = await fetchWrapper(getUrl(organizer + '_organizer'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(...res[i].value.trim().split(' '));\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getAuctionDetails(auctionId: string) {\r\n  const res = await fetchWrapper(getUrl(auctionId + '_.*'));\r\n  let auctionDetails: AuctionDetails = {\r\n    id: res[0].key.split('_')[0],\r\n  };\r\n  for (let i = 0; i < res.length; i++) {\r\n    const key = res[i].key.substr(res[i].key.indexOf('_') + 1);\r\n    const val = res[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n  return auctionDetails;\r\n}\r\n\r\nexport async function getAuctions(organizer?: string) {\r\n  const auctionIds = await getAuctionIds(organizer);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function createLot(\r\n  lot: Lot,\r\n  sign: SignatureCallback\r\n): Promise<any> {\r\n  const tx = {\r\n    type: 3,\r\n    data: {\r\n      name: lot.name,\r\n      description: lot.imageUrl,\r\n      quantity: 1,\r\n      precision: 0,\r\n      reissuable: false,\r\n      fee: {\r\n        tokens: 0.001 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx);\r\n}\r\n\r\nexport async function startAuction(\r\n  auction: Auction,\r\n  sign: SignatureCallback\r\n): Promise<any> {\r\n  if (auction.startPrice >= auction.deposit) {\r\n    throw new Error('start price should be >= deposit');\r\n  }\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'startAuction',\r\n        args: [\r\n          {\r\n            type: 'integer',\r\n            value: auction.duration,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.startPrice,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: auction.priceAssetId || 'WAVES',\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.deposit,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: 1,\r\n          assetId: auction.assetId,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx);\r\n}\r\n\r\n// Performs the following computation from smart contract in Typescript:\r\n// base64(hash(SALT + bidAmount.toString()))\r\n//\r\nexport function toHash(amount: number): HashedBid {\r\n  const bidStr = amount.toString();\r\n  const salt = randomStr();\r\n  const strToHash = salt + bidStr;\r\n  const bytesToHash = stringToBytes(strToHash);\r\n  const hashBytes = sha256(bytesToHash);\r\n  const hashedAmount = base64Encode(hashBytes);\r\n  return {\r\n    amount,\r\n    salt,\r\n    hashedAmount,\r\n  };\r\n}\r\n\r\nexport async function bid(bid: Bid, sign: SignatureCallback): Promise<any> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005 * WAVES,\r\n        assetId: 'WAVES',\r\n      },\r\n      dappAddress: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'bid',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: bid.auctionId,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: bid.hash,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: bid.deposit,\r\n          assetId: bid.priceAssetId || 'WAVES',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx);\r\n}\r\n\r\nfunction randomStr() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n","import { Icon } from 'antd';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {\r\n  item: Item;\r\n};\r\nexport const Attributes: React.FC<Props> = ({ item }) => {\r\n  return (\r\n    <div className={style.attributes}>\r\n      <div>\r\n        <Icon type=\"user\" /> {item.organizer}\r\n      </div>\r\n      <div>\r\n        <Icon type=\"clock-circle\" /> Ends {moment().to(0)}\r\n      </div>\r\n      <div>\r\n        <Icon type=\"money-collect\" /> {item.startPrice} Waves\r\n      </div>\r\n      <div>\r\n        <Icon type=\"number\" /> {item.unrevealed_count} bids\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Item } from '../types';\r\n\r\nexport function getImage(item: Item): string {\r\n  const n =\r\n    item.id.split('').reduce((prev, curr) => prev + curr.charCodeAt(0), 0) % 15;\r\n\r\n  return `https://placekitten.com/800/400?image=` + n;\r\n}\r\n","import { Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Attributes } from './Attributes';\r\nimport style from './Card.module.css';\r\nimport { getImage } from '../../utils/getImage';\r\n\r\nexport type CardProps = {\r\n  item: Item;\r\n};\r\nexport const Card: React.FC<CardProps> = ({ item }) => {\r\n  const handleClick = () => navigate(`/waves/bid/${item.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={getImage(item)} alt={''} />\r\n      <Typography.Title className={style.title} level={4}>\r\n        {item.id}\r\n      </Typography.Title>\r\n      <Attributes item={item} />\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {};\r\nexport const CardAdd: React.FC<Props> = () => {\r\n  return (\r\n    <div\r\n      className={`${style.card} ${style.add}`}\r\n      onClick={() => navigate('/waves/create')}\r\n      title=\"Create a new lot\"\r\n    >\r\n      <Icon className={style.add} type=\"plus\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Card } from '../Card/Card';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsProps = { items: Item[] };\r\n\r\nexport const Cards: React.FC<CardsProps> = ({ items }) => {\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd />\r\n      {items.map((item) => (\r\n        <Card key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\n\r\nexport const Section: React.FC = ({ children }) => {\r\n  return <div className={style.section}>{children}</div>;\r\n};\r\n","import {\n  Button,\n  Form,\n  Icon,\n  InputNumber,\n  Select,\n  Upload,\n  Typography,\n  Input,\n} from 'antd';\nimport React from 'react';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { Section } from '../Section/Section';\n\nconst { Option } = Select;\n\nclass Create extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Create new lot</Typography.Title>\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Name\">\n            {getFieldDecorator('input-name', {})(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Currency\" hasFeedback>\n            {getFieldDecorator('select', {})(\n              <Select placeholder=\"Please select a currency\">\n                <Option value=\"WAVES\">WAVES</Option>\n                <Option value=\"BTC\">BTC</Option>\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Start price\">\n            {getFieldDecorator('input-number-start-price', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Deposit\">\n            {getFieldDecorator('input-number-deposit', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Image\">\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                <Button>\n                  <Icon type=\"upload\" /> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Create\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(Create);\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Table } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nexport type DetailsTableProps = {\r\n  item: Item;\r\n};\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'key', dataIndex: 'key' },\r\n  { title: 'value', dataIndex: 'value' },\r\n];\r\n\r\nexport const DetailsTable: React.FC<DetailsTableProps> = ({ item }) => {\r\n  const map = {\r\n    'Auction id ': item.id,\r\n    'Max bid ': item.deposit,\r\n    'Amount ': item.lot_amount,\r\n    'Lot id ': item.lot_assetId,\r\n    'Organizer address ': item.organizer,\r\n    'Currency ': item.priceAssetId,\r\n    'Start bid ': item.startPrice,\r\n    'Time left for bids ': '@TODO',\r\n    'Second price': item.second_price\r\n      ? item.second_price\r\n      : 'Will be known after time left for bids complete',\r\n    'Top price ': item.top_price\r\n      ? item.top_price\r\n      : 'Will be known after time left for bids completed',\r\n    'Unrevealed count': item.unrevealed_count\r\n      ? item.unrevealed_count\r\n      : 'Will be known after time left for bids completed',\r\n    'Time left for reveal bids': '@TODO closing_start - today',\r\n    Settle: item.settle\r\n      ? 'Winner took the prize'\r\n      : 'The prize is held by the organizer',\r\n  };\r\n  const data = Object.entries(map).map(([key, value]) => ({ key, value }));\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      pagination={false}\r\n      showHeader={false}\r\n    ></Table>\r\n  );\r\n};\r\n","import { Button, InputNumber, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Item } from '../../types';\r\nimport { DetailsTable } from '../DetailsTable/DetailsTable';\r\nimport { Section } from '../Section/Section';\r\nimport { getImage } from '../../utils/getImage';\r\n\r\ntype Props = {\r\n  id: string;\r\n  items: Item[];\r\n};\r\nexport const Details: React.FC<Props> = ({ id, items }) => {\r\n  const [item, setItem] = useState<Item | undefined>(undefined);\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n  useEffect(() => {\r\n    setItem(items.find((item) => item.id === id) || items[0]);\r\n  }, [id, items]);\r\n  useEffect(() => {\r\n    if (item === undefined) return;\r\n    // setBidAmount(item.price);\r\n  }, [item]);\r\n\r\n  if (item === undefined) return <>Not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{item.id}</Typography.Title>\r\n      <img src={getImage(item)} alt={''} />\r\n      <DetailsTable item={item} />\r\n      <br />\r\n      <br />\r\n      <InputNumber\r\n        value={bidAmount}\r\n        min={0}\r\n        formatter={(value) => (value ? (+value / 100).toFixed(2) : '')}\r\n        parser={(value) => (value ? parseFloat(value) * 100 : 0)}\r\n        onChange={(value) => value && setBidAmount(value)}\r\n      />{' '}\r\n      <Button type=\"primary\">Bid</Button>\r\n    </Section>\r\n  );\r\n};\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { navigate, usePath } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IPublicState } from '../../utils/keeper';\r\n\r\nexport type HeaderProps = {\r\n  state?: IPublicState;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ state }) => {\r\n  const path = usePath();\r\n  const handleClick = (param: ClickParam) => {\r\n    navigate(param.key);\r\n  };\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <div style={{ float: 'left', color: 'white', marginRight: 20 }}>\r\n        WAVES BIDS\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        selectedKeys={[path]}\r\n        style={{ lineHeight: '64px' }}\r\n        onClick={handleClick}\r\n      >\r\n        <Menu.Item key=\"/waves/\">All lots</Menu.Item>\r\n        <Menu.Item key=\"/waves/create\">New lot</Menu.Item>\r\n        <Menu.SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n              {(state && state.account && state.account.name) ||\r\n                'NOT AUTHORIZED'}\r\n            </span>\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <Menu.Item disabled key=\"adress\">\r\n            {state && state.account && state.account.address}\r\n          </Menu.Item>\r\n          <Menu.ItemGroup title=\"Info\">\r\n            <Menu.Item disabled key=\"balance-available\">\r\n              Balance:{' '}\r\n              {state && state.account && state.account.balance.available} WAVES\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"network\">\r\n              Network: {state && state.account && state.account.network}\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport React from 'react';\nimport Header, { HeaderProps } from '../Header/Header';\n\ntype PageProps = HeaderProps;\n\nconst Page: React.FC<PageProps> = ({ children, state }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header state={state} />\n      <Layout.Content>{children}</Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default Page;\n","import { notification } from 'antd';\nimport { HookRouter, useRedirect, useRoutes } from 'hookrouter';\nimport React, { useEffect, useState } from 'react';\nimport { AuctionDetails, getAuctions } from '../../utils/api';\nimport { IPublicState } from '../../utils/keeper';\nimport { tmpKeeperInit } from '../../utils/tmpSimpleKeeper';\nimport { Cards } from '../Cards/Cards';\nimport Create2 from '../Create/Create';\nimport { Details } from '../Details/Details';\nimport Page from '../Page/Page';\n\nexport const App = () => {\n  useRedirect('/', '/waves/');\n  const [state, setState] = useState<IPublicState>();\n  const [auctions, setAuctions] = useState<AuctionDetails[]>();\n  useEffect(() => {\n    // @FIXME\n    tmpKeeperInit()\n      .then((state) => {\n        setState(state);\n      })\n      .catch((error) => {\n        notification.error({\n          message: error,\n          description:\n            'You need to install and configure Waves Keeper chrome extension in order to use this site!',\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    // const organizer = state.account!.address;\n    const organizer = '3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr';\n    getAuctions(organizer).then((auctions) => {\n      setAuctions(auctions);\n    });\n  }, []);\n\n  const routes: HookRouter.RouteObject = {\n    '/waves/': () => <Cards items={auctions || []} />,\n    '/waves/create': () => <Create2 />,\n    '/waves/bid/:id': ({ id }) => <Details id={id} items={auctions || []} />,\n  };\n\n  const routeResult = useRoutes(routes);\n\n  return <Page state={state}>{routeResult || '404. Page not found'}</Page>;\n};\n\nexport default App;\n","/** This is temporary solution! I need to use KeeperHelper class instead */\r\n\r\nimport { IWavesKeeperOptions, IPublicState } from './keeper';\r\n\r\ndeclare const WavesKeeper: { initialPromise: Promise<IWavesKeeperOptions> };\r\n\r\nexport function tmpKeeperInit(): Promise<IPublicState> {\r\n  return new Promise((resolve, reject) => {\r\n    window.onload = function() {\r\n      if (typeof WavesKeeper === 'undefined') {\r\n        return reject('Keeper is not installed!');\r\n      }\r\n\r\n      WavesKeeper.initialPromise.then((keeperApi: IWavesKeeperOptions) => {\r\n        keeperApi.publicState().then((state) => {\r\n          console.log({ state });\r\n          resolve(state);\r\n        });\r\n      });\r\n    };\r\n  });\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"add\":\"Card_add__1pgKF\",\"title\":\"Card_title__2pVhP\",\"attributes\":\"Card_attributes__16E1C\"};"],"sourceRoot":""}