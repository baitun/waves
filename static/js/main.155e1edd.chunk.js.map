{"version":3,"sources":["components/Cards/Cards.module.css","components/Section/Section.module.css","components/Card/Card.module.css","utils/api.ts","utils/tmpSimpleKeeper.ts","components/Section/Section.tsx","components/Bids/Bids.tsx","utils/getImage.ts","utils/time.ts","components/Card/Card.tsx","components/Card/CardAdd.tsx","components/Cards/CardsAuctions.tsx","components/Card/CardLot.tsx","components/Cards/CardsLots.tsx","components/Create/CreateAuction.tsx","components/Create/CreateLot.tsx","components/DetailsTable/DetailsTable.tsx","components/Details/AuctionDetails.tsx","components/Details/LotDetails.tsx","components/Header/Header.tsx","components/Page/Page.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","WAVES","fetchWrapper","url","fetch","then","response","json","generalFetchWrapper","CONTRACT_ADDRESS","BASE_URL","toShortTokenAmount","amount","parseInt","toString","getUrl","getDataUrl","matches","getCurrentHeight","a","val","height","getAuctionIds","organizer","res","auctionIds","i","length","push","value","trim","split","filter","getBidderAuctionIds","bidder","getAuctionDetails","auctionId","userRes","currentHeight","auctionDetails","id","key","substr","indexOf","replace","revealStart","settleStart","promises","map","Promise","all","auctions","getAuctionsAsBidder","auction","hash","deposit","createLot","lot","sign","tx","type","data","name","description","imageUrl","quantity","precision","reissuable","fee","tokens","assetId","JSON","parse","getLots","accountId","getLot","lotId","startAuction","startPrice","Error","dApp","call","function","args","duration","priceAssetId","payment","toHash","bidStr","salt","Math","random","substring","strToHash","bytesToHash","stringToBytes","hashBytes","sha256","hashedAmount","base64Encode","bid","reveal","withdraw","withKeeper","cb","fun","window","WavesKeeper","initialPromise","api","setTimeout","Section","children","className","style","section","columns","title","dataIndex","render","_","record","status","alreadyRevealed","onClick","doReveal","doWithdraw","view","signAndPublishTransaction","lotTx","console","info","fullHash","Bids","useState","bids","setBids","useEffect","publicState","ps","address","account","getBidsAsBidder","result","localStorage","getItem","alreadySettled","myBid","phase","Title","level","dataSource","pagination","rowKey","getImage","item","lot_assetId","BLOCK_DURATION","blocks2string","blocks","time","hh","String","floor","mm","time2string","blocks2time","Card","image","setImage","img","card","navigate","src","alt","attributes","deltaReveal","toFixed","unrevealed_count","CardAdd","props","add","CardsAuctions","cards","CardLot","Text","CardsLots","lots","setLots","Option","Select","CreateAuctionPL","handleSubmit","e","preventDefault","form","validateFields","err","values","log","notification","success","message","normFile","Array","isArray","fileList","state","that","this","setState","getFieldDecorator","labelCol","span","wrapperCol","onSubmit","Item","label","hasFeedback","step","offset","htmlType","React","Component","Form","create","CreateLotPL","upload","link","valuePropName","getValueFromEvent","action","listType","accept","headers","Authorization","customRequest","option","formData","FormData","append","file","xhr","XMLHttpRequest","addEventListener","readyState","onSuccess","onprogress","onProgress","onerror","onError","open","setRequestHeader","send","DetailsTable","Phase","lot_amount","second_price","top_price","deltaSettle","Settle","settle","Object","entries","showHeader","AuctionDetails","bidAmount","setBidAmount","undefined","winner","min","onChange","setItem","stringify","LotDetails","setLot","find","Header","path","usePath","float","color","marginRight","theme","mode","selectedKeys","lineHeight","param","SubMenu","ItemGroup","disabled","balance","available","network","Page","Content","Footer","App","useRedirect","setAuctions","myAuctions","setMyAuctions","resolve","reject","onload","keeperApi","catch","error","getAuctions","getAuctionsAsOrganizer","routes","CreateLot","CreateAuction","routeResult","useRoutes","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.155e1edd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__314Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"add\":\"Card_add__1pgKF\",\"title\":\"Card_title__2pVhP\",\"attributes\":\"Card_attributes__16E1C\"};","import { sha256, base64Encode, stringToBytes } from '@waves/ts-lib-crypto';\r\n\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=3MvxXxJcuELB2UaCHKVQaUszu8u3NmXxoWr_organizer.*\r\n// https://nodes-testnet.wavesnodes.com/addresses/data/3MvoQ3q8wFnquWFPSZuBGunTnE1fphumBxd?matches=TAyRZ8XwQ5HYTkZUrTkMFb4oG43UMkCmB3wT5zdj6nL_.*\r\n\r\nexport const WAVES = 10 ** 8;\r\n\r\ntype Phase = 'BID' | 'REVEAL' | 'SETTTLE';\r\n\r\ntype ResponseItem = {\r\n  type: string;\r\n  value: string;\r\n  key: string;\r\n};\r\n\r\nexport type IAuctionDetails = {\r\n  id: string;\r\n\r\n  phase: Phase;\r\n\r\n  lot_amount?: number;\r\n\r\n  /** Time left for bids (in blocks) */\r\n  deltaReveal?: number;\r\n\r\n  /** Time left for reveal bids (in blocks) */\r\n  deltaSettle?: number;\r\n\r\n  /** base58 адрес устроителя аукциона */\r\n  organizer?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  lot_assetId?: string;\r\n  // lot_asset_id?: string;\r\n  /** base58 идентификатор (адрес) NFT токена для продажи */\r\n  priceAssetId?: string;\r\n  // price_asset_id?: string;\r\n  /** начальная (минимальная) цена лота */\r\n  startPrice?: number;\r\n  // start_price?: string;\r\n  /** наивысшая раскрытая цена */\r\n  top_price?: number;\r\n  /** вторая раскрытая цена */\r\n  second_price?: number;\r\n  /** base58 адрес победителя аукциона */\r\n  winner?: string;\r\n  /** номер блока (выста) с которой начинается фаза раскрытия */\r\n  reveal_start?: number;\r\n  /** номер блока (выста) с которой начинается фаза окончения */\r\n  closing_start?: number;\r\n  /** размер депозита (максимальной ставки) для участия в аукционе */\r\n  deposit?: number;\r\n  /** количество не раскрывшихся участников */\r\n  unrevealed_count?: number;\r\n  /** признак что аукцион завершился (деньги перечислены организатору, а лот участнику) */\r\n  settle?: boolean;\r\n};\r\n\r\nexport type ILot = {\r\n  name: string; // Token name\r\n  imageUrl: string; // URL Preview на аукцион\r\n};\r\n\r\nexport type ILotDetails = ILot & { id: string };\r\n\r\nexport type Auction = {\r\n  assetId: string;\r\n  duration: number;\r\n  startPrice: number;\r\n  priceAssetId?: string;\r\n  deposit: number;\r\n};\r\n\r\nexport type BidWithAuction = Bid & IAuctionDetails;\r\n\r\nexport type Bid = {\r\n  auctionId: string;\r\n  hash: string;\r\n  /** валюта аукциона (base58 адрес токена валюты или строка 'WAVES') */\r\n  priceAssetId?: string;\r\n  /** размер депозита участника (максимальная цена) по аукциону */\r\n  deposit: number;\r\n};\r\n\r\nexport type IBidDetails = Bid & IAuctionDetails;\r\n\r\nexport type HashedBid = {\r\n  amount: string;\r\n  salt: string;\r\n  hashedAmount: string;\r\n};\r\n\r\nexport type Reveal = {\r\n  auctionId: string;\r\n  salt: string;\r\n  amount: number;\r\n};\r\n\r\nexport type TxResponse = {\r\n  id: string;\r\n  sender: string;\r\n  senderPublicKey: string;\r\n  timestamp: number;\r\n};\r\n\r\nexport type Error = {\r\n  error: string;\r\n  message: string;\r\n};\r\n\r\nexport type NFT = {\r\n  description: string;\r\n  id: string;\r\n  name: string;\r\n};\r\n\r\nexport type SignatureCallback = (txData: any) => Promise<any>;\r\n\r\nfunction fetchWrapper(url: string): Promise<ResponseItem[]> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nfunction generalFetchWrapper(url: string): Promise<any> {\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n\r\nconst CONTRACT_ADDRESS = '3MrtCAwzpyGd4gHfZvRRc3n3vJBceDLL7kg';\r\n\r\nconst BASE_URL = 'https://nodes-testnet.wavesnodes.com';\r\n\r\nexport function toShortTokenAmount(amount: string | number) {\r\n  return (parseInt('' + amount) / WAVES).toString();\r\n}\r\nexport function getUrl(url: string): string {\r\n  return `${BASE_URL}/${url}`;\r\n}\r\n\r\nexport function getDataUrl(matches: string): string {\r\n  return getUrl(`addresses/data/${CONTRACT_ADDRESS}?matches=${matches}`);\r\n}\r\n\r\nexport async function getCurrentHeight(): Promise<number> {\r\n  return generalFetchWrapper(getUrl(`blocks/height`)).then((val) => val.height);\r\n}\r\n\r\nexport async function getAuctionIds(\r\n  organizer = '[A-Za-z0-9]{35}'\r\n): Promise<string[]> {\r\n  const res = await fetchWrapper(getDataUrl(organizer + '_organizer'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(\r\n      ...res[i].value\r\n        .trim()\r\n        .split(' ')\r\n        .filter((val) => val !== '')\r\n    );\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getBidderAuctionIds(bidder: string): Promise<string[]> {\r\n  const res = await fetchWrapper(getDataUrl(bidder + '_bidder'));\r\n  let auctionIds: string[] = [];\r\n  for (let i = 0; i < res.length; i++) {\r\n    auctionIds.push(\r\n      ...res[i].value\r\n        .trim()\r\n        .split(' ')\r\n        .filter((val) => val !== '')\r\n    );\r\n  }\r\n  return auctionIds;\r\n}\r\n\r\nexport async function getAuctionDetails(auctionId: string) {\r\n  // TODO: Add current user here\r\n  const res = await fetchWrapper(getDataUrl(auctionId + '_.*'));\r\n  const userRes = await fetchWrapper(\r\n    getDataUrl(auctionId + '[A-Za-z0-9]{35}_.*')\r\n  );\r\n  const currentHeight = await getCurrentHeight();\r\n  let auctionDetails: any = {\r\n    id: res[0] && res[0].key.split('_')[0],\r\n  };\r\n  for (let i = 0; i < res.length; i++) {\r\n    const key = res[i].key.substr(res[i].key.indexOf('_') + 1);\r\n    const val = res[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n\r\n  for (let i = 0; i < userRes.length; i++) {\r\n    const key = userRes[i].key.replace(auctionId, '');\r\n    const val = userRes[i].value;\r\n    auctionDetails[key] = val;\r\n  }\r\n\r\n  const revealStart = auctionDetails['reveal_start'];\r\n  const settleStart = auctionDetails['closing_start'];\r\n\r\n  auctionDetails['phase'] = 'BID';\r\n  if (currentHeight >= revealStart && currentHeight < settleStart) {\r\n    auctionDetails['phase'] = 'REVEAL';\r\n\r\n    if (auctionDetails['unrevealed_count'] === 0) {\r\n      auctionDetails['phase'] = 'SETTLE';\r\n    }\r\n  }\r\n  if (currentHeight >= settleStart) {\r\n    auctionDetails['phase'] = 'SETTLE';\r\n  }\r\n\r\n  auctionDetails['deltaReveal'] = revealStart - currentHeight;\r\n  auctionDetails['deltaSettle'] = settleStart - currentHeight;\r\n\r\n  return auctionDetails;\r\n}\r\n\r\nexport async function getAuctions(): Promise<IAuctionDetails[]> {\r\n  const auctionIds = await getAuctionIds();\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function getAuctionsAsBidder(\r\n  bidder: string\r\n): Promise<IAuctionDetails[]> {\r\n  const auctionIds = await getBidderAuctionIds(bidder);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function getBidsAsBidder(\r\n  bidder: string\r\n): Promise<BidWithAuction[]> {\r\n  return getAuctionsAsBidder(bidder).then((auctions) =>\r\n    auctions.map((auction) => {\r\n      return {\r\n        auctionId: auction.id,\r\n        hash: auction[auction.id + bidder + '_bid_hash'],\r\n        deposit: auction.deposit || 0,\r\n        ...auction,\r\n      };\r\n    })\r\n  );\r\n}\r\n\r\nexport async function getAuctionsAsOrganizer(\r\n  organizer?: string\r\n): Promise<IAuctionDetails[]> {\r\n  const auctionIds = await getAuctionIds(organizer);\r\n  const promises = auctionIds.map((id) => getAuctionDetails(id));\r\n  const auctions = await Promise.all(promises);\r\n  return auctions;\r\n}\r\n\r\nexport async function createLot(\r\n  lot: ILot,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 3,\r\n    data: {\r\n      name: lot.name,\r\n      description: lot.imageUrl,\r\n      quantity: 1,\r\n      precision: 0,\r\n      reissuable: false,\r\n      fee: {\r\n        tokens: '0.001',\r\n        assetId: 'WAVES',\r\n      },\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function getLots(accountId: string): Promise<Array<NFT>> {\r\n  const url = getUrl(`assets/nft/${accountId}/limit/100`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function getLot(lotId: string): Promise<NFT> {\r\n  const url = getUrl(`assets/details/${lotId}`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function startAuction(\r\n  auction: Auction,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  if (auction.startPrice >= auction.deposit) {\r\n    throw new Error('start price should NOT be >= deposit');\r\n  }\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: '0.005',\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'startAuction',\r\n        args: [\r\n          {\r\n            type: 'integer',\r\n            value: auction.duration,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.startPrice * WAVES,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: auction.priceAssetId || 'WAVES',\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: auction.deposit * WAVES,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: 1,\r\n          assetId: auction.assetId,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\n// Performs the following computation from smart contract in Typescript:\r\n// base64(hash(SALT + bidAmount.toString()))\r\n//\r\nexport function toHash(amount: number): HashedBid {\r\n  const bidStr = (amount * WAVES).toString();\r\n  const salt = randomStr();\r\n  const strToHash = salt + bidStr;\r\n  const bytesToHash = stringToBytes(strToHash);\r\n  const hashBytes = sha256(bytesToHash);\r\n  const hashedAmount = base64Encode(hashBytes);\r\n  return {\r\n    amount: bidStr,\r\n    salt,\r\n    hashedAmount,\r\n  };\r\n}\r\n\r\nexport async function bid(\r\n  bid: Bid,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005,\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'bid',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: bid.auctionId,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: bid.hash,\r\n          },\r\n        ],\r\n      },\r\n      payment: [\r\n        {\r\n          tokens: '' + bid.deposit / WAVES,\r\n          assetId: bid.priceAssetId || 'WAVES',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function reveal(\r\n  reveal: Reveal,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005,\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'reveal',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: reveal.auctionId,\r\n          },\r\n          {\r\n            type: 'integer',\r\n            value: reveal.amount,\r\n          },\r\n          {\r\n            type: 'string',\r\n            value: reveal.salt,\r\n          },\r\n        ],\r\n      },\r\n      payment: [],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function withdraw(\r\n  auctionId: string,\r\n  sign: SignatureCallback\r\n): Promise<TxResponse> {\r\n  const tx = {\r\n    type: 16,\r\n    data: {\r\n      fee: {\r\n        tokens: 0.005,\r\n        assetId: 'WAVES',\r\n      },\r\n      dApp: CONTRACT_ADDRESS,\r\n      call: {\r\n        function: 'withdraw',\r\n        args: [\r\n          {\r\n            type: 'string',\r\n            value: auctionId,\r\n          },\r\n        ],\r\n      },\r\n      payment: [],\r\n    },\r\n  };\r\n\r\n  return sign(tx).then(JSON.parse);\r\n}\r\n\r\nexport async function getTxInfo(txid: string): Promise<Error | TxResponse> {\r\n  const url = getUrl(`transactions/info/${txid}`);\r\n  return generalFetchWrapper(url);\r\n}\r\n\r\nexport async function awaitTx(txid: string): Promise<TxResponse> {\r\n  return new Promise(function(resolve) {\r\n    (async function wait() {\r\n      const info = await getTxInfo(txid);\r\n      if (!(info as Error).error) return resolve(info as TxResponse);\r\n      setTimeout(wait, 300);\r\n    })();\r\n  });\r\n}\r\n\r\nexport function randomStr() {\r\n  return (\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15) +\r\n    Math.random()\r\n      .toString(36)\r\n      .substring(2, 15)\r\n  );\r\n}\r\n","/** This is temporary solution! I need to use KeeperHelper class instead */\r\n\r\nimport { IWavesKeeperOptions, IPublicState } from './keeper';\r\n\r\ndeclare const WavesKeeper: { initialPromise: Promise<IWavesKeeperOptions> };\r\n\r\nexport function tmpKeeperInit(): Promise<IPublicState> {\r\n  return new Promise((resolve, reject) => {\r\n    window.onload = function() {\r\n      if (typeof WavesKeeper === 'undefined') {\r\n        return reject('Keeper is not installed!');\r\n      }\r\n\r\n      WavesKeeper.initialPromise.then((keeperApi: IWavesKeeperOptions) => {\r\n        keeperApi.publicState().then((state) => {\r\n          console.log({ state });\r\n          resolve(state);\r\n        });\r\n      });\r\n    };\r\n  });\r\n}\r\n\r\nexport const withKeeper = (cb: (options: IWavesKeeperOptions) => any) => {\r\n  const fun = () => {\r\n    if (window['WavesKeeper']) {\r\n      WavesKeeper.initialPromise.then((api) => {\r\n        cb(api);\r\n      });\r\n    } else {\r\n      setTimeout(fun, 50);\r\n    }\r\n  };\r\n\r\n  fun();\r\n};\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\n\r\nexport const Section: React.FC = ({ children }) => {\r\n  return <div className={style.section}>{children}</div>;\r\n};\r\n","import { Table, Typography, Button } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  getBidsAsBidder,\r\n  toShortTokenAmount,\r\n  reveal,\r\n  HashedBid,\r\n  withdraw,\r\n} from '../../utils/api';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { Section } from '../Section/Section';\r\n\r\ntype BidView = {\r\n  deposit: string;\r\n  myBid: string;\r\n  fullHash: HashedBid;\r\n  auctionId: string;\r\n  startPrice: string;\r\n  status: string;\r\n  alreadyRevealed: boolean;\r\n};\r\n\r\nconst columns: ColumnProps<BidView>[] = [\r\n  { title: 'Auction ID', dataIndex: 'auctionId' },\r\n  { title: 'Start price', dataIndex: 'startPrice' },\r\n  { title: 'Deposit', dataIndex: 'deposit' },\r\n  { title: 'My bid', dataIndex: 'myBid' },\r\n  { title: 'Status', dataIndex: 'status' },\r\n  {\r\n    title: 'Actions',\r\n    render: (_, record) => (\r\n      <>\r\n        {record.status === 'REVEAL' && !record.alreadyRevealed ? (\r\n          <Button onClick={doReveal(record)}>Reveal</Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {record.status === 'SETTLE' ? (\r\n          <Button onClick={doWithdraw(record)}>Withdraw</Button>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </>\r\n    ),\r\n  },\r\n];\r\n\r\nconst doWithdraw = (view: BidView) => () => {\r\n  withKeeper(async (api) => {\r\n    const lotTx = await withdraw(view.auctionId, api.signAndPublishTransaction);\r\n\r\n    console.info('Created asset: ' + lotTx.id + ' waiting for tx');\r\n  });\r\n};\r\n\r\nconst doReveal = (view: BidView) => () => {\r\n  withKeeper(async (api) => {\r\n    const lotTx = await reveal(\r\n      {\r\n        auctionId: view.auctionId,\r\n        salt: view.fullHash.salt,\r\n        amount: parseInt(view.fullHash.amount),\r\n      },\r\n      api.signAndPublishTransaction\r\n    );\r\n\r\n    console.info('Created asset: ' + lotTx.id + ' waiting for tx');\r\n  });\r\n};\r\n\r\ntype Props = {};\r\n\r\nexport const Bids: React.FC<Props> = () => {\r\n  const [bids, setBids] = useState<BidView[]>([]);\r\n\r\n  useEffect(() => {\r\n    withKeeper((api) => {\r\n      api.publicState().then((ps) => {\r\n        const address = ps.account && ps.account.address;\r\n\r\n        if (address) {\r\n          getBidsAsBidder(address).then((result) => {\r\n            setBids(\r\n              result\r\n                .map((bid) => {\r\n                  const fullHash = JSON.parse(\r\n                    localStorage.getItem(`${address}_${bid.auctionId}`) || '{}'\r\n                  ) as HashedBid;\r\n\r\n                  const alreadyRevealed = bid[`${address}_revealed`];\r\n                  const alreadySettled = bid[`${address}_settle`];\r\n\r\n                  return {\r\n                    deposit: toShortTokenAmount(bid.deposit),\r\n                    myBid: toShortTokenAmount(fullHash.amount),\r\n                    auctionId: bid.auctionId,\r\n                    fullHash: fullHash,\r\n                    startPrice: toShortTokenAmount(bid.startPrice || 0),\r\n                    status: bid.phase,\r\n                    alreadyRevealed: alreadyRevealed,\r\n                    alreadySettled: alreadySettled,\r\n                  };\r\n                })\r\n                .filter((bid) => !bid.alreadySettled)\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>My bids</Typography.Title>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={bids}\r\n        pagination={false}\r\n        rowKey=\"auctionId\"\r\n      ></Table>\r\n    </Section>\r\n  );\r\n};\r\n","import { Item } from '../types';\r\nimport { getLot } from '../utils/api';\r\n\r\nexport async function getImage(item: Item): Promise<string> {\r\n  return getLot(item.lot_assetId || '').then((lot) => lot.description);\r\n}\r\n","/** Duration of one block is approximately 1 minute */\nexport const BLOCK_DURATION = 1 * 60;\n\n/** Converts number of blocks to TimeStamp */\nexport function blocks2time(blocks: number): number {\n  return blocks * BLOCK_DURATION;\n}\n\nexport function time2string(time: number): string {\n  let hh = String(Math.floor(time / 60 / 60));\n  let mm = String(Math.floor(time / 60) % 60);\n  // let ss = String(time % 60);\n  if (mm.length === 1) mm = '0' + mm;\n  // if (ss.length === 1) ss = '0' + ss;\n  return `${hh}h ${mm}m `;\n}\n\nexport function blocks2string(blocks: number): string {\n  return time2string(blocks2time(blocks));\n}\n","import { Icon, Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Item } from '../../types';\r\nimport { WAVES } from '../../utils/api';\r\nimport { getImage } from '../../utils/getImage';\r\nimport { blocks2string } from '../../utils/time';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardProps = {\r\n  item: Item;\r\n};\r\nexport const Card: React.FC<CardProps> = ({ item }) => {\r\n  const handleClick = () => navigate(`/waves/auction/${item.id}`);\r\n\r\n  const [image, setImage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    getImage(item).then((img) => {\r\n      setImage(img);\r\n    });\r\n  }, [item]);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={image} alt={''} />\r\n      <Typography.Title className={style.title} level={4}>\r\n        {item.id}\r\n      </Typography.Title>\r\n      <div className={style.attributes}>\r\n        <div>\r\n          <Icon type=\"user\" /> {item.organizer}\r\n        </div>\r\n        <div>\r\n          <Icon type=\"clock-circle\" />\r\n          {item.deltaReveal && item.deltaReveal > 0\r\n            ? blocks2string(item.deltaReveal)\r\n            : 'Ended'}\r\n        </div>\r\n        <div>\r\n          <Icon type=\"money-collect\" /> {(item.startPrice! / WAVES).toFixed(2)}{' '}\r\n          WAVES\r\n        </div>\r\n        <div>\r\n          <Icon type=\"number\" /> {item.unrevealed_count} bids\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from 'antd';\r\nimport React from 'react';\r\nimport style from './Card.module.css';\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  title: string;\r\n};\r\nexport const CardAdd: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${style.card} ${style.add}`} {...props}>\r\n      <Icon type=\"plus\" />\r\n    </div>\r\n  );\r\n};\r\n","import { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IAuctionDetails } from '../../utils/api';\r\nimport { Card } from '../Card/Card';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsProps = { auctions: IAuctionDetails[] };\r\n\r\nexport const CardsAuctions: React.FC<CardsProps> = ({ auctions }) => {\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd\r\n        onClick={() => navigate('/waves/create/auction')}\r\n        title=\"Create a new auction\"\r\n      />\r\n      {auctions.map((item) => (\r\n        <Card key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Typography } from 'antd';\r\nimport { navigate } from 'hookrouter';\r\nimport React from 'react';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport style from './Card.module.css';\r\n\r\nexport type CardLotProps = {\r\n  lot: ILotDetails;\r\n};\r\nexport const CardLot: React.FC<CardLotProps> = ({ lot }) => {\r\n  const handleClick = () => navigate(`/waves/lot/${lot.id}`);\r\n\r\n  return (\r\n    <div className={style.card} onClick={handleClick}>\r\n      <img src={lot.imageUrl} alt={''} />\r\n\r\n      <Typography.Text>{lot.id.substr(20, lot.id.length)}</Typography.Text>\r\n      <Typography.Title className={style.title} level={4}>\r\n        {lot.name}\r\n      </Typography.Title>\r\n    </div>\r\n  );\r\n};\r\n","import { navigate } from 'hookrouter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NFT, getLots } from '../../utils/api';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { CardAdd } from '../Card/CardAdd';\r\nimport { CardLot } from '../Card/CardLot';\r\nimport style from './Cards.module.css';\r\n\r\nexport type CardsLotsProps = {};\r\n\r\nexport const CardsLots: React.FC<CardsLotsProps> = () => {\r\n  const [lots, setLots] = useState<NFT[]>([]);\r\n\r\n  useEffect(() => {\r\n    withKeeper((api) => {\r\n      api.publicState().then((ps) => {\r\n        const address = ps.account && ps.account.address;\r\n\r\n        if (address) {\r\n          getLots(address).then((result) => {\r\n            setLots(result);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.cards}>\r\n      <CardAdd\r\n        onClick={() => navigate('/waves/create/lot')}\r\n        title=\"Create a new lot\"\r\n      />\r\n      {lots.map((lot) => (\r\n        <CardLot\r\n          key={lot.id}\r\n          lot={{\r\n            name: lot.name,\r\n            imageUrl: lot.description,\r\n            id: lot.id,\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import {\n  Button,\n  Form,\n  InputNumber,\n  Select,\n  Typography,\n  notification,\n} from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { navigate } from 'hookrouter';\nimport React from 'react';\nimport { startAuction, getLots, NFT } from '../../utils/api';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nconst { Option } = Select;\n\ninterface State {\n  lots?: Array<NFT>;\n}\n\nclass CreateAuctionPL extends React.Component<FormComponentProps, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = { lots: [] };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api) => {\n          const lotTx = await startAuction(\n            {\n              assetId: values['select-lot'],\n              duration: values['duration'],\n              startPrice: values['input-number-start-price'],\n              priceAssetId: 'WAVES',\n              deposit: values['input-number-deposit'],\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n          notification.success({ message: 'Created asset: ' + lotTx.id });\n          setTimeout(() => {\n            navigate('/waves/auctions');\n          }, 1000);\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  componentDidMount() {\n    const that = this;\n    withKeeper((api) => {\n      api.publicState().then((ps) => {\n        const address = ps.account && ps.account.address;\n\n        if (address) {\n          getLots(address).then((result) => {\n            that.setState({\n              lots: result,\n            });\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { lots } = this.state;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating an auction</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot\" hasFeedback>\n            {getFieldDecorator('select-lot', {})(\n              <Select>\n                {lots &&\n                  lots.map((lot) => (\n                    <Option value={lot.id} key={lot.id}>\n                      {lot.name}\n                    </Option>\n                  ))}\n              </Select>\n            )}\n            <Button onClick={() => navigate('/waves/create/lot')}>\n              Create Lot\n            </Button>\n          </Form.Item>\n\n          <Form.Item label=\"Duration\">\n            {getFieldDecorator('duration', {})(<InputNumber step={1} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Start price\">\n            {getFieldDecorator('input-number-start-price', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Deposit\">\n            {getFieldDecorator('input-number-deposit', {})(\n              <InputNumber step={0.01} />\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save auction\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateAuctionPL);\n","import {\n  Button,\n  Form,\n  Icon,\n  Input,\n  notification,\n  Typography,\n  Upload,\n} from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { navigate } from 'hookrouter';\nimport React from 'react';\nimport { createLot } from '../../utils/api';\nimport { IWavesKeeperOptions } from '../../utils/keeper';\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\nimport { Section } from '../Section/Section';\n\nclass CreateLotPL extends React.Component<FormComponentProps> {\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        withKeeper(async (api: IWavesKeeperOptions) => {\n          const lotTx = await createLot(\n            {\n              name: values['input-name'],\n              imageUrl: values.upload[0].response.data.link,\n            },\n            api.signAndPublishTransaction\n          );\n\n          console.info('Created asset: ' + lotTx.id + ' waiting for tx');\n          notification.success({ message: 'Created asset: ' + lotTx.id });\n          setTimeout(() => {\n            navigate('/waves/lots');\n          }, 1000);\n        });\n      }\n    });\n  };\n\n  normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Section>\n        <Typography.Title>Creating a Lot</Typography.Title>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n          <Form.Item label=\"Lot name\">\n            {getFieldDecorator('input-name', {})(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Image for lot\">\n            {getFieldDecorator('upload', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n            })(\n              <Upload\n                name=\"image\"\n                action=\"https://api.imgur.com/3/upload\"\n                listType=\"picture\"\n                accept=\"image/*\"\n                headers={{\n                  Authorization: 'Client-ID 1650f750334defb',\n                }}\n                customRequest={(option: any) => {\n                  console.log(option);\n\n                  var formData = new FormData();\n                  formData.append('image', option.file);\n\n                  let xhr = new XMLHttpRequest();\n\n                  xhr.addEventListener('readystatechange', function() {\n                    if (this.readyState === 4) {\n                      let response = JSON.parse(this.response);\n                      console.log(response);\n                      option.onSuccess(response);\n                    }\n                  });\n\n                  xhr.onprogress = option.onProgress;\n                  xhr.onerror = option.onError;\n\n                  xhr.open('POST', 'https://api.imgur.com/3/image');\n                  xhr.setRequestHeader(\n                    'Authorization',\n                    'Client-ID 1650f750334defb'\n                  );\n\n                  xhr.send(formData);\n                }}\n              >\n                <Button>\n                  <Icon type=\"upload\" /> Click to upload\n                </Button>\n              </Upload>\n            )}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save Lot\n            </Button>\n          </Form.Item>\n        </Form>\n      </Section>\n    );\n  }\n}\n\nexport default Form.create({ name: 'validate_other' })(CreateLotPL);\n","import React from 'react';\r\nimport { Item } from '../../types';\r\nimport { Table } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { toShortTokenAmount } from '../../utils/api';\r\nimport { blocks2string } from '../../utils/time';\r\n\r\nexport type DetailsTableProps = {\r\n  item: Item;\r\n};\r\n\r\nconst columns: ColumnProps<any>[] = [\r\n  { title: 'key', dataIndex: 'key' },\r\n  { title: 'value', dataIndex: 'value' },\r\n];\r\n\r\nexport const DetailsTable: React.FC<DetailsTableProps> = ({ item }) => {\r\n  const map = {\r\n    'Auction id ': item.id,\r\n    Phase: item.phase,\r\n    'Max bid ': toShortTokenAmount(item.deposit || 0),\r\n    'Amount ': item.lot_amount,\r\n    'Lot id ': item.lot_assetId,\r\n    'Organizer address ': item.organizer,\r\n    'Currency ': item.priceAssetId,\r\n    'Start bid ': toShortTokenAmount(item.startPrice || 0),\r\n    'Time left for bids ': item.deltaReveal\r\n      ? item.deltaReveal > 0\r\n        ? blocks2string(item.deltaReveal)\r\n        : 'Bid phase ended ' + -item.deltaReveal + ' blocks ago'\r\n      : '?',\r\n    'Second price': item.second_price\r\n      ? toShortTokenAmount(item.second_price)\r\n      : 'Will be known after time left for bids complete',\r\n    'Top price ': item.top_price\r\n      ? toShortTokenAmount(item.top_price)\r\n      : 'Will be known after time left for bids completed',\r\n    'Unrevealed count': item.unrevealed_count,\r\n    'Time left for reveal bids': item.deltaSettle\r\n      ? item.deltaSettle > 0\r\n        ? blocks2string(item.deltaSettle)\r\n        : 'Reveal phase ended ' + -item.deltaSettle + ' blocks ago'\r\n      : '?',\r\n    Settle: item.settle\r\n      ? 'Winner took the prize'\r\n      : 'The prize is held by the organizer',\r\n  };\r\n  const data = Object.entries(map).map(([key, value]) => ({ key, value }));\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={data}\r\n      pagination={false}\r\n      showHeader={false}\r\n    ></Table>\r\n  );\r\n};\r\n","import { Button, InputNumber, Typography } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { IAuctionDetails, bid, toHash, withdraw } from '../../utils/api';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { getImage } from '../../utils/getImage';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { DetailsTable } from '../DetailsTable/DetailsTable';\r\nimport { Section } from '../Section/Section';\r\n\r\ntype Props = {\r\n  auction?: IAuctionDetails;\r\n  state?: IPublicState;\r\n};\r\nexport const AuctionDetails: React.FC<Props> = ({ auction, state }) => {\r\n  const [bidAmount, setBidAmount] = useState(0);\r\n\r\n  const [image, setImage] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (auction) {\r\n      getImage(auction).then((img) => {\r\n        setImage(img);\r\n      });\r\n    }\r\n  }, [auction]);\r\n\r\n  const handleBid = () => {\r\n    const fullHash = toHash(bidAmount);\r\n    if (auction) {\r\n      withKeeper(async (api) => {\r\n        const lotTx = await bid(\r\n          {\r\n            auctionId: auction.id,\r\n            hash: fullHash.hashedAmount,\r\n            priceAssetId: auction.priceAssetId,\r\n            deposit: auction.deposit || 0,\r\n          },\r\n          api.signAndPublishTransaction\r\n        );\r\n\r\n        if (lotTx) {\r\n          api.publicState().then((ps) => {\r\n            const address = ps.account && ps.account.address;\r\n            if (address) {\r\n              localStorage.setItem(\r\n                `${address}_${auction.id}`,\r\n                JSON.stringify(fullHash)\r\n              );\r\n            }\r\n          });\r\n        }\r\n        console.info('Created asset: ' + lotTx.id + ' waiting for tx');\r\n      });\r\n    }\r\n  };\r\n\r\n  const doWithdraw = () => {\r\n    withKeeper(async (api) => {\r\n      if (auction) {\r\n        const lotTx = await withdraw(auction.id, api.signAndPublishTransaction);\r\n\r\n        console.info('Created asset: ' + lotTx.id + ' waiting for tx');\r\n      }\r\n    });\r\n  };\r\n\r\n  if (auction === undefined) return <>Auction not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{auction.id}</Typography.Title>\r\n      <img src={image} alt={''} />\r\n      <DetailsTable item={auction} />\r\n      <br />\r\n      <br />\r\n\r\n      {state!.account!.address === auction.organizer &&\r\n      auction.phase !== 'BID' ? (\r\n        <>\r\n          {!auction.settle ? (\r\n            <Button type=\"primary\" onClick={doWithdraw}>\r\n              {auction.unrevealed_count === 0 && !auction.winner\r\n                ? 'Refund'\r\n                : 'Settle'}\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {state!.account!.address !== auction.organizer ? (\r\n            <>\r\n              <InputNumber\r\n                step={0.01}\r\n                value={bidAmount}\r\n                min={0}\r\n                onChange={(value) => value && setBidAmount(value)}\r\n              />{' '}\r\n              <Button type=\"primary\" onClick={handleBid}>\r\n                Bid\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n","import { Typography, Button } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withKeeper } from '../../utils/tmpSimpleKeeper';\r\nimport { getLots } from '../../utils/api';\r\nimport { ILotDetails } from '../../utils/api';\r\nimport { Section } from '../Section/Section';\r\nimport { navigate } from 'hookrouter';\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\nexport const LotDetails: React.FC<Props> = ({ id }) => {\r\n  const [lot, setLot] = useState<ILotDetails>();\r\n\r\n  useEffect(() => {\r\n    withKeeper((api) => {\r\n      api.publicState().then((ps) => {\r\n        const address = ps.account && ps.account.address;\r\n\r\n        if (address) {\r\n          getLots(address).then((result) => {\r\n            setLot(\r\n              result\r\n                .map((lot) => {\r\n                  return {\r\n                    id: lot.id,\r\n                    name: lot.name,\r\n                    imageUrl: lot.description,\r\n                  };\r\n                })\r\n                .find((lot) => lot.id === id)\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, [id]);\r\n\r\n  if (lot === undefined) return <>Lot not found</>;\r\n\r\n  return (\r\n    <Section>\r\n      <Typography.Title level={1}>{lot.name}</Typography.Title>\r\n      <img src={lot.imageUrl} alt={''} />\r\n      <br />\r\n      <br />\r\n      <Button onClick={() => navigate('/waves/create/auction')} type=\"primary\">\r\n        Send to auction\r\n      </Button>\r\n    </Section>\r\n  );\r\n};\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport { ClickParam } from 'antd/lib/menu';\r\nimport { navigate, usePath } from 'hookrouter';\r\nimport React from 'react';\r\nimport { IPublicState } from '../../utils/keeper';\r\nimport { toShortTokenAmount } from '../../utils/api';\r\n\r\nexport type HeaderProps = {\r\n  state?: IPublicState;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ state }) => {\r\n  const path = usePath();\r\n  const handleClick = (param: ClickParam) => {\r\n    navigate(param.key);\r\n  };\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <div style={{ float: 'left', color: 'white', marginRight: 20 }}>\r\n        WAVES BIDS\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        selectedKeys={[path]}\r\n        style={{ lineHeight: '64px' }}\r\n        onClick={handleClick}\r\n      >\r\n        <Menu.Item key=\"/waves/\">All auctions</Menu.Item>\r\n        <Menu.SubMenu title=\"Create\">\r\n          <Menu.Item key=\"/waves/create/lot\">Create lot</Menu.Item>\r\n          <Menu.Item key=\"/waves/create/auction\">Create auction</Menu.Item>\r\n        </Menu.SubMenu>\r\n        <Menu.SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"user\" />\r\n              {(state && state.account && state.account.name) ||\r\n                'NOT AUTHORIZED'}\r\n            </span>\r\n          }\r\n          style={{ float: 'right' }}\r\n        >\r\n          <Menu.Item key=\"/waves/auctions\">My auctions</Menu.Item>\r\n          <Menu.Item key=\"/waves/bids\">My bids</Menu.Item>\r\n          <Menu.Item key=\"/waves/lots\">My lots</Menu.Item>\r\n\r\n          <Menu.ItemGroup title=\"Info\">\r\n            <Menu.Item disabled key=\"adress\">\r\n              {state && state.account && state.account.address}\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"balance-available\">\r\n              Balance:{' '}\r\n              {state &&\r\n                state.account &&\r\n                toShortTokenAmount(state.account.balance.available)}{' '}\r\n              WAVES\r\n            </Menu.Item>\r\n            <Menu.Item disabled key=\"network\">\r\n              Network: {state && state.account && state.account.network}\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu.SubMenu>\r\n      </Menu>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Layout } from 'antd';\nimport React from 'react';\nimport Header, { HeaderProps } from '../Header/Header';\n\ntype PageProps = HeaderProps;\n\nconst Page: React.FC<PageProps> = ({ children, state }) => {\n  return (\n    <Layout className=\"layout\">\n      <Header state={state} />\n      <Layout.Content>{children}</Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default Page;\n","import { notification } from 'antd';\nimport { HookRouter, useRedirect, useRoutes } from 'hookrouter';\nimport React, { useEffect, useState } from 'react';\nimport {\n  getAuctions,\n  getAuctionsAsOrganizer,\n  IAuctionDetails,\n} from '../../utils/api';\nimport { IPublicState } from '../../utils/keeper';\nimport { tmpKeeperInit } from '../../utils/tmpSimpleKeeper';\nimport { Bids } from '../Bids/Bids';\nimport { CardsAuctions } from '../Cards/CardsAuctions';\nimport { CardsLots } from '../Cards/CardsLots';\nimport CreateAuction from '../Create/CreateAuction';\nimport CreateLot from '../Create/CreateLot';\nimport { AuctionDetails } from '../Details/AuctionDetails';\nimport { LotDetails } from '../Details/LotDetails';\nimport Page from '../Page/Page';\n\nexport const App = () => {\n  useRedirect('/', '/waves/');\n  const [state, setState] = useState<IPublicState>();\n  const [auctions, setAuctions] = useState<IAuctionDetails[]>();\n  const [myAuctions, setMyAuctions] = useState<IAuctionDetails[]>();\n\n  useEffect(() => {\n    // @FIXME\n    tmpKeeperInit()\n      .then((state) => {\n        setState(state);\n      })\n      .catch((error) => {\n        notification.error({\n          message: error,\n          description:\n            'You need to install and configure Waves Keeper chrome extension in order to use this site!',\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!state) return;\n    if (!state.account) {\n      throw new Error('There is no `account` field in `state` object');\n    }\n    getAuctions().then((auctions) => {\n      setAuctions(auctions);\n    });\n  }, [state]);\n\n  useEffect(() => {\n    if (!state) return;\n    if (!state.account) {\n      throw new Error('There is no `account` field in `state` object');\n    }\n    getAuctionsAsOrganizer(state.account.address).then((auctions) => {\n      setMyAuctions(auctions);\n    });\n  }, [state]);\n\n  const routes: HookRouter.RouteObject = {\n    '/waves/': () => (\n      <CardsAuctions\n        auctions={\n          (auctions && auctions.filter((auction) => auction.phase === 'BID')) ||\n          []\n        }\n      />\n    ),\n    '/waves/auctions': () => (\n      <CardsAuctions\n        auctions={\n          (myAuctions && myAuctions.filter((auction) => !auction.settle)) || []\n        }\n      />\n    ),\n    '/waves/lots': () => <CardsLots />,\n    '/waves/bids': () => <Bids />,\n    '/waves/create/lot': () => <CreateLot />,\n    '/waves/create/auction': () => <CreateAuction />,\n    '/waves/auction/:id': ({ id }) =>\n      auctions && (\n        <AuctionDetails\n          state={state}\n          auction={auctions.find((a) => a.id === id)}\n        />\n      ),\n    '/waves/lot/:id': ({ id }) => <LotDetails id={id} />,\n  };\n\n  const routeResult = useRoutes(routes);\n\n  return <Page state={state}>{routeResult || '404. Page not found'}</Page>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}